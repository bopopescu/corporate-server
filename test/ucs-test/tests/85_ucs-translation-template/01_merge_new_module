#!/usr/share/ucs-test/runner python
## desc: |
##  univention-ucs-translation-merge new module
##  Does univention-ucs-translation-merge correctly insert new translation
##  files into existing translation source packages?
## bugs: [41223]
## tags: [WIP, translation-template, skip_admember]
## roles:
##  - domaincontroller_master
## versions:
##  4.1-2: found
## exposure: safe
## packages:
##   - univention-ucs-translation-template
##   - subversion
from difflib import context_diff
from distutils.dir_util import copy_tree, remove_tree
from distutils.file_util import copy_file
from hashlib import md5
from tempfile import mkdtemp
import logging
import os
import tools
import univention.testing.utils as utils


SVN_PATH = 'SVN'
DUMMY_MOD_DIR = 'management/univention-management-console-module-dummy'
DUMMY_MOD_EXPECTED_PO_PATHS = [
	'univention-l10n-XX/XX/management/univention-management-console-module-dummy/umc/python/dummy/XX.po',
	'univention-l10n-XX/XX/management/univention-management-console-module-dummy/umc/XX.po',
	'univention-l10n-XX/XX/management/univention-management-console-module-dummy/umc/js/XX.po'
]
MAKEFILE_EXPECTED_DIFF = [
	'+ \t$(DESTDIR)/usr/share/locale/XX/LC_MESSAGES/univention-management-console-module-dummy.mo \\\n',
	'+ \t$(DESTDIR)/usr/share/univention-management-console-frontend/js/umc/modules/i18n/XX/dummy.json \\\n',
	'+ \t$(DESTDIR)/usr/share/univention-management-console/i18n/XX/dummy.mo \\\n',
	'+ $(DESTDIR)/usr/share/locale/XX/LC_MESSAGES/univention-management-console-module-dummy.mo: XX/management/univention-management-console-module-dummy/umc/python/dummy/XX.po\n',
	'+ $(DESTDIR)/usr/share/univention-management-console-frontend/js/umc/modules/i18n/XX/dummy.json: XX/management/univention-management-console-module-dummy/umc/js/XX.po\n',
	'+ $(DESTDIR)/usr/share/univention-management-console/i18n/XX/dummy.mo: XX/management/univention-management-console-module-dummy/umc/XX.po\n'
]
TRANSLATION_PKG_NAME = 'univention-l10n-XX'

if __name__ == '__main__':
	logging.basicConfig(level='DEBUG')
	tmp_dir = mkdtemp(prefix='translation-template-test-01-')
	os.chdir(tmp_dir)

	try:
		tools.call('svn', 'checkout', 'http://forge.univention.org/svn/dev/branches/ucs-4.1/ucs-4.1-1/management', os.path.join(SVN_PATH, 'management'))
		tools.call('univention-ucs-translation-build-package', '--source={}'.format(SVN_PATH), '--languagecode=XX', '--locale=fr_FR.UTF-8:UTF-8', '--language-name=TEST0')
		tools.call('univention-ucs-translation-fakemessage', TRANSLATION_PKG_NAME)
	except tools.InvalidCommandError:
		utils.fail("Error during test execution.")
	copy_file(os.path.join(TRANSLATION_PKG_NAME, 'all_targets.mk'), 'all_targets.mk.pre_merge')

	# Add dummy module with new translations
	copy_tree('/usr/share/ucs-test/85_ucs-translation-template/dummy_module', SVN_PATH)
	tools.call('univention-ucs-translation-merge', SVN_PATH, TRANSLATION_PKG_NAME)
	remove_tree(os.path.join(SVN_PATH, 'management/univention-management-console-module-dummy'))
	tools.call('univention-ucs-translation-fakemessage', TRANSLATION_PKG_NAME)

	translation_tree_path = os.path.join(TRANSLATION_PKG_NAME, 'XX', DUMMY_MOD_DIR)
	new_po_paths = tools.get_matching_file_paths(translation_tree_path, '*.po')
	if not set(new_po_paths) == set(DUMMY_MOD_EXPECTED_PO_PATHS):
		utils.fail("Expected PO files weren't created.")
	with open('all_targets.mk.pre_merge', 'r') as pre, open(os.path.join(TRANSLATION_PKG_NAME, 'all_targets.mk')) as after:
		diff = [line for line in context_diff(pre.readlines(), after.readlines()) if line.startswith('+ ')]

	if set(diff) != set(MAKEFILE_EXPECTED_DIFF):
		if diff:
			logging.debug("Failure: unexpected diff. Resulting diff:\n%s", ''.join(diff))
		else:
			logging.debug("Failure: unexpected diff. Resulting diff is empty.")
		utils.fail("Diff didn't yield expected result.")

	tools.call('univention-ucs-translation-merge', SVN_PATH, TRANSLATION_PKG_NAME)

	# Files obsoleted upstream detected?
	new_po_paths = tools.get_matching_file_paths(translation_tree_path, '*.obsolete')
	expected_obsoleted_po_paths = ['{}.obsolete'.format(path) for path in DUMMY_MOD_EXPECTED_PO_PATHS]
	if set(new_po_paths) != set(expected_obsoleted_po_paths):
		utils.fail("Merge didn't detect obsoleted po files.")

	# Makefile should be the same as before adding the dummy module
	with open('all_targets.mk.pre_merge', 'rb') as pre_change, open(os.path.join(TRANSLATION_PKG_NAME, 'all_targets.mk'), 'rb') as after:
		if md5(pre_change.read()).hexdigest() != md5(after.read()).hexdigest():
			utils.fail("Makefile incorrect after dummy module removal.")
	remove_tree(tmp_dir)
