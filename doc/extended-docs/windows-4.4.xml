<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
	<!ENTITY % extensions SYSTEM "../stylesheets/macros.ent" >
	<!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >
	%extensions;
	%entities;
]>
<book lang="en" id="windows-4.4">
    <bookinfo>
      <title>Univention Corporate Server</title>
      <subtitle>Extended Windows integration documentation</subtitle>
    </bookinfo>

    <chapter id="samba">
        <title>Advanced Samba documentation</title>
        <section id="samba:doc">
            <title>Operating Samba 4 as a read-only domain controller</title>
			<para>
			  Active Directory offers an operating mode called <emphasis>read-only domain
			  controller</emphasis> (RODC) with the following properties:

			  <itemizedlist>
				<listitem><para>
				  The data are only stored in read-only format; all write changes must be
				  performed on another domain controller.
				</para></listitem>

				<listitem><para>
				  Consequently, replication is only performed in one direction.
				</para></listitem>
			  </itemizedlist>

			  A comprehensive description can be found in the Microsoft TechNet Library <biblioref linkend="technet-rodc"/>.
			</para>

			<para>
			  A Samba 4 domain controller can be operated in RODC mode (on a &ucsSlave; for
			  example). Prior to the installation of <package>univention-samba4</package>, the
			  &ucsUCRV; <envar>samba4/role</envar> must be set to <literal>RODC</literal>:
			</para>
<programlisting language="sh">
ucr set samba4/role=RODC
univention-install univention-samba4
univention-run-join-scripts
</programlisting>

        </section>

        <section id="ext-win-s4-uninstall">
		  <title>Uninstallation of a Samba 4 domain controller</title>
		  <para>
			The removal of an Samba 4 domain controller (Active Directory-compatible domain
			controller) is a far-reaching configuration step and should be prepared thoroughly.
		  </para>

		  <para>
			If the domain should continue to be provide Active Directory-compatible services, the
			<package>univention-samba4</package> package must remain installed on the &ucsMaster;
			or a &ucsBackup; system.
		  </para>

		  <para>
			Before uninstalling the packages, the domain controller registration must be removed
			from the Samba 4 database. This can be done with the helper script
			<command>purge_s4_computer.py</command>. It must be run on the &ucsMaster; or a
			&ucsBackup; system. The query <guimenu>Really remove master from Samba 4?</guimenu> must
			be answered with <emphasis>Yes</emphasis> and the question <guimenu>Really remove master
			from UDM as well?</guimenu> must be answered with <emphasis>No</emphasis>.
			e.g:
		  </para>

<screen>
root@backup:~# /usr/share/univention-samba4/scripts/purge_s4_computer.py --computername=master
Really remove master from Samba 4? [y/N]: Yes
If you are really sure type YES and hit enter: YES
Ok, continuing as requested.

[...]
Removing CN=MASTER,CN=Computers,$ldap_BASE from SAM database.
Really remove master from UDM as well? [y/N]: No
Ok, stopping as requested.

root@backup:~#
</screen>

			<para>
			  The Univention S4 connector must be run on the &ucsMaster; or a &ucsBackup; in the
			  domain. After Samba 4 was uninstalled, the join script of the S4 connector
			  (97univention-s4-connector) script should be re-executed on the &ucsMaster; or a
			  another &ucsBackup;. This can be done via the &ucsUMC; module <guimenu>Domain
			  join</guimenu>:
			</para>

			<figure id="s4connector-rejoin">
			  <title>Re-execute S4 connector join script</title>
			  <graphic scalefit="1" width="80%" fileref="illustrations44/s4connector-re-execute.png"/>
			</figure>

			<para>
			  The FSMO (Flexible Single Master Operations) roles should be checked. In case the
			  roles were provided by the removed DC, they must be transferred, for example:
			</para>
<screen>
root@backup:~# samba-tool fsmo show
InfrastructureMasterRole owner: CN=NTDS Settings,CN=MASTER,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=dom
RidAllocationMasterRole owner: CN=NTDS Settings,CN=MASTER,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=dom
PdcEmulationMasterRole owner: CN=NTDS Settings,CN=MASTER,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=dom
DomainNamingMasterRole owner: CN=NTDS Settings,CN=MASTER,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=dom
SchemaMasterRole owner: CN=NTDS Settings,CN=MASTER,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=dom

root@backup:~# samba-tool fsmo seize --role=all --force
Will not attempt transfer, seizing...
FSMO transfer of 'rid' role successful
Will not attempt transfer, seizing...
FSMO transfer of 'pdc' role successful
Will not attempt transfer, seizing...
FSMO transfer of 'naming' role successful
Will not attempt transfer, seizing...
FSMO transfer of 'infrastructure' role successful
Will not attempt transfer, seizing...
FSMO transfer of 'schema' role successful
root@backup:~#
</screen>
        </section>
    </chapter>

    <chapter id="ad">
	  <title>Advanced Active Directory connector documentation</title>
	  <section id="ad:multiple">
		<title>Synchronization of several Active Directory domains with one UCS directory service</title>
		<para>
		  It is possible to synchronize several separate Active Directory domains with one UCS
		  directory service (e.g. to synchronize with an AD forest). One OU
		  (organizational unit) can be defined in LDAP for each AD domain, under which the objects
		  of the respective domains are synchronized. The configuration of further connector
		  instances is not covered by the UMC module.
		</para>

		<para>
		  Several connector instances are started parallel to each other. Each connector instance is
		  operated with a self-contained configuration base. The
		  <command>prepare-new-instance</command> script is used to create a new instance, e.g.:

<programlisting language="sh">
/usr/share/univention-ad-connector/scripts/prepare-new-instance -a create -c connector2
</programlisting>
		</para>

		<para>
		  This script creates an additional init script for the second connector instance
		  (<filename>/etc/init.d/univention-ad-connector2</filename>), a configuration directory
		  <filename>/etc/univention/connector2</filename> with a copy of the mapping settings of
		  the main connector instance (this can be adapted if necessary) and an array of internal
		  runtime directories.
		</para>

		<para>
		  The additional connector instances are registered in the &ucsUCRV;
		  <envar>connector/listener/additionalbasenames</envar>.
		</para>

		<para>
		If SSL is used for the connection encryption, the exported Active Directory certificate must be converted via <command>openssl</command> into the required format, for example:

<programlisting language="sh">
openssl x509 -inform der -outform pem -in infile.cer -out ad-connector2.pem
</programlisting>

		The file name of the converted certificate then needs to be stored in
		&ucsUCR;:

<programlisting language="sh">
univention-config-registry set \
   connector2/ad/ldap/certificate=/etc/univention/ad-connector2.pem
</programlisting>
		</para>

		<para>
		  If a UCS synchronization is performed towards Active Directory, the replication of the
		  listener module must be restarted after a further connector instance is created. To this
		  end, the following command must be run:

<programlisting language="sh">
univention-directory-listener-ctrl resync ad-connector
</programlisting>
		</para>

		<para>
		  The command line tools which belong to the AD Connector such as
		  <command>univention-adsearch</command> support selecting the connector instance with the
		  parameter <option>-c</option>.
		</para>
	  </section>
	</chapter>


	<bibliography id="bibliography">
		<bibliomixed id="technet-rodc"/>
	</bibliography>
</book>
