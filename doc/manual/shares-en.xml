<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE chapter [
	<!ENTITY % extensions SYSTEM "../stylesheets/macros.ent" >
	<!ENTITY % DocBookDTD PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
	<!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >
	%extensions;
	%DocBookDTD;
	%entities;
]>
<chapter id="shares::general">
  <title>File share management</title>
  <para>
	UCS supports the central management of directory shares. A share registered in &ucsUMC; is
	created on an arbitrary UCS server system as part of the UCS domain replication.
  </para>

  <para>
	Provision for accessing clients can occur via CIFS (supported by Windows/Linux clients) and/or
	NFS (primarily supported by Linux/Unix). The NFS shares managed in &ucsUMC; can be mounted
	by clients both via NFSv3 and via NFSv4.
  </para>

  <para>
	If a file share is deleted on a server, the shared files in the directory are preserved.
  </para>

  <para>
	To be able to use access control lists on a share, the underlying Linux file system must support
	POSIX ACLs. In UCS the file systems <systemitem class="filesystem">ext3</systemitem>, <systemitem class="filesystem">ext4</systemitem> and <systemitem class="filesystem">XFS</systemitem> support POSIX ACLs. The Samba
	configuration also allows storing DOS file attributes in extended attributes of the Unix file
	system. To use extended attributes, the partition must be mounted using the mount option
	<option>user_xattr</option>.
  </para>

  <section id="shares::permissions"><title>Access rights to data in shares</title>
  <para>
	Access permissions to files are managed in UCS using users and
	groups. All the file servers in the UCS domain access identical user
	and group data via the LDAP directory.
  </para>
  <para>
	Three access rights are differentiated per file: read, write and execute.
	Three access rights also apply per directory: read and write are the
	same; the execute permission here refers to the permission to enter a
	directory.
  </para>

  <para>
	Each file/directory is owned by a user and a group. The three
	permission outlined above can be applied to the user owner, the owner group
	and all others.
  </para>

  <para>
	If the <emphasis>setuid</emphasis> option is set for an executable file, it can be run by users
	with the privileges of the owner of the file.
  </para>

  <para>
	If the <emphasis>setgid</emphasis> option is set for a directory, files saved there inherit the
	directory's owner group. If further directories are created, they also inherit the option.
  </para>

  <para>
	If the <emphasis>sticky bit</emphasis> option is enabled for a directory, files in this directory
	can only be deleted by the owner of the file or the root user.
  </para>

  <para>
	Access control lists allow even more complex permission models.
	The configuration of ACLs is described in <u:sdb>1042</u:sdb>.
  </para>
  <para>
	In the Unix permission model - and thus under UCS - write permission
	is not sufficient to change the permissions of a file. This is limited
	to the owner/owner group of a file. In contrast, under Microsoft Windows
	all users with write permissions also have the permission to change
	the permissions. This scheme can be adjusted for CIFS shares (see
	<xref linkend="shares::management"/>).
  </para>
  <para>
	Only initial users and access permissions are assigned when a
	directory share is created. If the directory already exists, the
	permissions of the existing directory are adjusted.
  </para>
  <para>
	Changes to the permissions of a shared directory performed directly
	in the file system are not forwarded to the LDAP directory. If the
	permissions/owners are edited within &ucsUMC;, the changes in the file
	system are overwritten. Settings to the root directory of a file share
	should thus only be set and edited with &ucsUMC;. Additional adjustment of the access
	permissions of the subordinate directories are then performed via the
	accessing clients, e.g., via Windows Explorer, or directly via command
	line commands on the file server.
  </para>
  <para>
	The <emphasis>homes</emphasis> share plays a special role within Samba. This share is used for
	sharing the home directories of the users. This share is automatically
	converted to the user's home directory. Samba therefore ignores the rights
	assigned to the share, and uses the rights of the respective home directory
	instead.
  </para>
  </section>

<section id="shares::management"><title>Management of shares in UMC</title>
<para>
File shares are managed in the UMC module <emphasis>Shares</emphasis>
(see <xref linkend="central:user-interface"/>).
</para>
<para>
When adding/editing/deleting a share, it is entered, modified or removed
in the <filename>/etc/exports</filename> file and/or the Samba configuration.
</para>

<figure id="shares:umc"><title>Creating a share in UMC</title>
 <graphic scalefit="1" width="100%" fileref="illustrations44/projekt-freigabe_EN.png"/>
</figure>

<table>
  <title>'General' tab</title>
  <tgroup cols="2">
	<colspec colnum="1" colname="col1" colwidth="1*"/>
	<colspec colnum="2" colname="col2" colwidth="2*"/>
	<thead>
	  <row>
		<entry>Attribute</entry>
		<entry>Description</entry>
	  </row>
	</thead>
	<tbody>

	  <row>
		<entry>Name</entry>
		<entry>
		  The name of the share is to be entered here. The name must be composed
		  of letters, numerals, full stops or blank spaces and must begin and
		  end with a letter or numeral.
		</entry>
	  </row>

	  <row>
		<entry>Host</entry>
		<entry>
		  The server where the share is located.
		  All of the domain controller master/backup/slave computers and &ucsMember;s
		  entered in the LDAP directory for the domain are available for selection which
		  are entered in a DNS forward lookup zone in the LDAP directory.
		</entry>
	  </row>

	  <row>
		<entry>Directory</entry>
		<entry>
		  <para>
			The absolute path of the directory to be shared, without quotation marks (this
			also applies if the name includes special characters such as spaces). If the
			directory does not exist, it will be created automatically on the selected
			server.
		  </para>
		  <para>
			If the &ucsUCRV; <envar>listener/shares/rename</envar> is set to <literal>yes</literal>, the
			contents of the existing directory are moved when the path is
			modified.
		  </para>
		  <para>
			No shares can be created in and below <filename class="directory">/proc</filename>, <filename class="directory">/tmp</filename>,
			<filename class="directory">/root</filename>, <filename class="directory">/dev</filename> and <filename class="directory">/sys</filename> and no files can be moved there.
		  </para>
		</entry>
	  </row>

	  <row>
		<entry>Directory owner of the share's root directory</entry>
		<entry>
		  The user to whom the root directory of the share should belong, see
		  <xref linkend="shares::permissions"/>.
		</entry>
	  </row>

	  <row>
		<entry>Directory owner group of the share's root directory</entry>
		<entry>
		  The group to whom the root directory of the share should belong, see
		  <xref linkend="shares::permissions"/>.
		</entry>
	  </row>

	  <row>
		<entry>Permissions for the share's root directory</entry>
		<entry>
		  The read, write and access permissions for the root directory of the
		  share, see <xref linkend="shares::permissions"/>.
		</entry>
	  </row>

	</tbody>
  </tgroup>
</table>


<table>
  <title>'NFS' tab</title>
  <tgroup cols="2">
	<colspec colnum="1" colname="col1" colwidth="1*"/>
	<colspec colnum="2" colname="col2" colwidth="2*"/>
	<thead>
	  <row>
		<entry>Attribute</entry>
		<entry>Description</entry>
	  </row>
	</thead>
	<tbody>

	  <row>
		<entry>NFS write access</entry>
		<entry>
		  Allows NFS write access to this share; otherwise the share can only
		  be used in read-only mode.
		</entry>
	  </row>

	  <row>
		<entry>Subtree checking</entry>
		<entry>
		  If only one subdirectory of a file system is exported, the NFS server has to
		  check whether an accessed file is located on the exported file system and in
		  the exported path, each time access is made. Path information is passed on to
		  the client for this check. Activating this function might cause problems if a
		  file opened by the client, is renamed.
		</entry>
	  </row>

	  <row>
		<entry>Modify user ID for root user (root squashing)</entry>
		<entry>
		  <para>
			In the NFS standard procedure, identification of users is achieved via user
			IDs. To prevent a local root user from working with root permissions on
			other shares, root access can be redirected. If this option is activated,
			access operations are executed as user <systemitem class="username">nobody</systemitem>.
		  </para>

		  <para>
			The local group <systemitem class="groupname">staff</systemitem>, which is by default empty, owns privileges which come
			quite close to <systemitem class="username">root</systemitem> permissions, yet this group is not considered by the
			redirection mechanism. This fact should be borne in mind when adding users to
			this group.
		  </para>
		</entry>
	  </row>

	  <row>
		<entry>NFS synchronization</entry>
		<entry>
		  The synchronization mode for the share. The <option>sync</option> setting is
		  used to write data directly on the underlying storage device. The
		  opposite setting - <option>async</option> - can improve performance but also
		  involves the risk of data loss if the server is shut down incorrectly.
		</entry>
	  </row>

	  <row>
		<entry>Only allow access for these hosts, IP addresses or networks</entry>
		<entry>
		  By default, all hosts are permitted access to a share. In this select list,
		  host names and IP addresses can be included, to which the access to the share
		  is to be restricted. For example, access to a share containing mail data could
		  be restricted to the mail server of the domain.
		</entry>
	  </row>

	</tbody>
  </tgroup>
</table>



<table>
  <title>'Samba' tab</title>
  <tgroup cols="2">
	<colspec colnum="1" colname="col1" colwidth="1*"/>
	<colspec colnum="2" colname="col2" colwidth="2*"/>
	<thead>
	  <row>
		<entry>Attribute</entry>
		<entry>Description</entry>
	  </row>
	</thead>
	<tbody>

	  <row>
		<entry>Samba name</entry>
		<entry>
		  <para>
			The NetBIOS name of the share. This is the name under which the share
			is displayed on Windows computers in the network environment. When
			adding a directory share, &ucsUMC; adopts the name entered in
			the <guimenu>Name</guimenu> field of the <guimenu>General</guimenu> tab
			as the default.
		  </para>
		</entry>
	  </row>

	  <row>
		<entry>Samba write access</entry>
		<entry>
		  Permits write access to this share.
		</entry>
	  </row>

	  <row>
		<entry>Show in Windows network environment</entry>
		<entry>
		  Specifies whether the share in question is to show up on Windows clients
		  within the network environment.
		</entry>
	  </row>

	  <row>
		<entry>Allow anonymous read-only access with a guest user</entry>
		<entry>
		  Permits access to this share without a password. Every access is carried out
		  by means of the common guest user <systemitem class="username">nobody</systemitem>.
		</entry>
	  </row>

	  <row>
		<entry>MSDFS root</entry>
		<entry>
		  This option is documented in <xref linkend="shares::msdfs"/>.
		</entry>
	  </row>

	  <row>
		<entry>Users with write access may modify permissions</entry>
		<entry>
		  If this option is activated, all users with write permission to a file
		  are allowed to change permissions, ACL entries, and file ownership
		  rights, see <xref linkend="shares::permissions"/>.
		</entry>
	  </row>

	  <row>
		<entry>Hide unreadable files/directories</entry>
		<entry>
		  If this option is activated, all files which are nonreadable for the user due
		  to their file permissions, will be hidden.
		</entry>
	  </row>

	  <row>
		<entry>VFS Objects</entry>
		<entry>
		  Virtual File System (VFS) modules are used in Samba for performing
		  actions before an access to the file system of a share is made, e.g.,
		  a virus scanner which stores every infected file accessed in the share
		  in quarantine or server-side implementation of recycle bin deletion of
		  files.
		</entry>
	  </row>

	</tbody>
  </tgroup>
</table>


<table>
  <title>'Samba permissions' tab (advanced settings)</title>
  <tgroup cols="2">
	<colspec colnum="1" colname="col1" colwidth="1*"/>
	<colspec colnum="2" colname="col2" colwidth="2*"/>
	<thead>
	  <row>
		<entry>Attribute</entry>
		<entry>Description</entry>
	  </row>
	</thead>
	<tbody>

	  <row>
		<entry>Force user</entry>
		<entry>
		  This username and its permissions and primary group is used for performing all the
		  file operations of accessing users. The username is only used once the user has
		  established a connection to the Samba share by using his real username and
		  password. A common username is useful for using data in a shared way, yet
		  improper application might cause security problems.
		</entry>
	  </row>

	  <row>
		<entry>Force group</entry>
		<entry>
		  <para>
			A group which is to be used by all users connecting with this share, as their
			primary group. Thereby, the permissions of this group automatically apply
			as the group permissions of all these users. A group registered here has a
			higher priority than a group which was assigned as the primary group of a user
			via the <guimenu>Force user</guimenu> entry field.
		  </para>
		  <para>
			If a + sign is prefixed to the group name, then the group is assigned as a
			primary group solely to those users which are already members of this
			group. All other users retain their primary groups.
		  </para>
		</entry>
	  </row>

	  <row>
		<entry>Valid users or groups</entry>
		<entry>
		  <para>
			Names of users or groups which are authorized to access this Samba share. To
			all other users, access is denied. If the field is empty, all users may access
			the share - if necessary after entering a password. This option is
			useful for securing access to a share at file server level beyond
			the file permissions.
		  </para>
		  <para>
			The entries are to be separated by spaces. The special characters @, + and &amp;
			can be used in connection with the group name for assigning certain
			permissions to the users of the stated group for accessing the Samba share:
		  </para>

		  <itemizedlist>
			<listitem><simpara>A name beginning with the character @ will first be interpreted as a NIS
			Netgroup. Should no NIS Netgroup of this name be found, the name will be
			considered as a UNIX group.</simpara></listitem>
			<listitem><simpara>A name beginning with the character + will be exclusively considered as a UNIX
			group, a name beginning with the character &amp; will be exclusively considered
			as a NIS Netgroup.</simpara></listitem>
			<listitem><simpara>A name beginning with the characters +&amp;, will first be interpreted as a UNIX
			group. Should no UNIX group of this name be found, the name will be
			considered as a NIS Netgroup. The characters &amp;+ as the beginning of a name
			correspond to the character @.</simpara></listitem>
		  </itemizedlist>
		</entry>
	  </row>

	  <row>
		<entry>Invalid users or groups</entry>
		<entry>
		  The users or groups listed here cannot access the Samba share. The syntax is identical to the one
		  for valid users. If a user or group is included in the list of valid users and unauthorized users,
		  access is denied.
		</entry>
	  </row>

	  <row>
		<entry>Restrict write access to these users/groups</entry>
		<entry>
		  Only the users and groups listed here have write permission for the
		  corresponding share.
		</entry>
	  </row>

	  <row>
		<entry>Allowed hosts/networks</entry>
		<entry>
		  Names of computers which are authorized to access this Samba share. All other computers are denied
		  access. In addition to computer names, it is also possible to specify IP or network addresses, e.g.,
		  <userinput>192.0.2.0/255.255.255.0</userinput>.
		</entry>
	  </row>

	  <row>
		<entry>Denied hosts/networks</entry>
		<entry>
		  The opposite to the authorized computers. If a computer appears in both lists, the computer is
		  permitted to access the Samba share.
		</entry>
	  </row>

	  <row>
		<entry>NT ACL support</entry>
		<entry>
		  <para>
			If this option is activated, Samba will try to show POSIX ACLs under Windows,
			and to adopt changes to the ACLs, which were performed under Windows, for the
			POSIX ACLs.
		  </para>
		  <para>
			If this option is not set, existing POSIX ACLs are effective but not shown
			under Windows, and consequently cannot be changed under Windows.
		  </para>
		</entry>
	  </row>

	  <row>
		<entry>Inherit ACLs</entry>
		<entry>
		  When activating this option, each file created in this share will inherit the ACL (Access
		  Control List) of the directory where the file was created.
		</entry>
	  </row>

	  <row>
		<entry>Create files/directories with the owner of the parent directory</entry>
		<entry>
		  When activating this option, each newly created file will not be assigned of
		  the user who created the file, but to the owner of the superior directory
		  instead.
		</entry>
	  </row>

	  <row>
		<entry>Create files/directories with permissions of the parent directory</entry>
		<entry>
		  When activating this option, for each file or directory created in this share,
		  the UNIX permissions of the superior directory will automatically be
		  adopted.
		</entry>
	  </row>

	</tbody>
  </tgroup>
</table>

<para>
  If a new file is created on a Samba server from a Windows client, the file
  permissions will be set in several steps:
</para>
<orderedlist>
  <listitem><simpara>First, only the DOS permissions are translated into UNIX permissions.</simpara></listitem>
  <listitem><simpara>Then the permissions are filtered via the <guimenu>Filemode</guimenu>.
  UNIX permissions which are marked in <guimenu>File mode</guimenu>,
  are the only ones preserved. Permissions not set here, will be
  removed. Thus, the permissions have to be set as UNIX permissions and
  in <guimenu>File mode</guimenu> in order to be preserved.</simpara></listitem>
  <listitem><simpara>In the next step, the permissions under <guimenu>Force file mode</guimenu>
  are added. As a result, the file will have all the permissions
  set after step 2 or under <guimenu>Force file mode</guimenu>. This means,
  permissions marked under <guimenu>Force file mode</guimenu> are set in any case.</simpara></listitem>
</orderedlist>
<para>
  Accordingly, a newly created directory will initially be assigned the
  same permissions as that which are set as UNIX permissions and
  in <guimenu>Directory mode</guimenu> at the same time. Then these
  permissions are completed by those marked under <guimenu>Force directory mode</guimenu>.
</para>
<para>
  In a similar way, the security settings are adopted for existing files and
  directories the permissions of which are edited under Windows:
</para>
<para>
  Only those permissions can be changed under Windows, which are marked
  in <guimenu>Security mode</guimenu> or in <guimenu>Directory security mode</guimenu>.
  Once this is done, the permissions marked
  under <guimenu>Force security mode</guimenu> of under <guimenu>Force directory security mode</guimenu>
  are set in any case.
</para>
<para>
  Thus, the parameters <guimenu>File mode</guimenu> and <guimenu>Force file mode</guimenu>,
  or <guimenu>Directory mode</guimenu> and <guimenu>Force directory mode</guimenu>
  are applied during the creation of a file or
  directory, while the parameters <guimenu>Security mode</guimenu>
  and <guimenu>Force Security Mode</guimenu> or <guimenu>Security directory mode</guimenu>
  and <guimenu>Force security directory mode</guimenu> are
  applied when changing permissions.
</para>
<note>
  <para>
	The security settings only relate to the access via Samba.
  </para>
  <para>
	The user on the Windows side does not receive any notification of the fact
	that the file or directory authorizations might by changed according to the
	Samba settings on this tab.
  </para>
</note>

<table>
  <title>'Samba extended permissions' tab (advanced settings)</title>
  <tgroup cols="2">
	<colspec colnum="1" colname="col1" colwidth="1*"/>
	<colspec colnum="2" colname="col2" colwidth="2*"/>
	<thead>
	  <row>
		<entry>Attribute</entry>
		<entry>Description</entry>
	  </row>
	</thead>
	<tbody>

	  <row>
		<entry>File mode</entry>
		<entry>
		  The permissions Samba is to adopt when creating a file, provided they are
		  set under Windows.
		</entry>
	  </row>

	  <row>
		<entry>Directory mode</entry>
		<entry>
		  The permissions Samba is to adopt when creating a directory, provided they
		  are set under Windows.
		</entry>
	  </row>

	  <row>
		<entry>Force file mode</entry>
		<entry>
		  The permissions Samba is to set in any case when creating a file,
		  irrespective of whether they are set under Windows or not.
		</entry>
	  </row>

	  <row>
		<entry>Force directory mode</entry>
		<entry>
		  The permissions Samba is to set in any case when creating a directory,
		  irrespective of whether they are set under Windows or not.
		</entry>
	  </row>

	  <row>
		<entry>Security mode</entry>
		<entry>
		  The file permissions to which Samba is to permit changes made from Windows
		  side.
		</entry>
	  </row>

	  <row>
		<entry>Directory security mode</entry>
		<entry>
		  The directory authorizations to which Samba is to permit changes made from
		  Windows side.
		</entry>
	  </row>

	  <row>
		<entry>Force security mode</entry>
		<entry>
		  The permissions Samba is to set in any case (irrespective of whether they
		  are set under Windows or not), if file permissions are changed from Windows
		  side.
		</entry>
	  </row>

	  <row>
		<entry>Force directory security mode</entry>
		<entry>
		  The permissions Samba is to set in any case if directory permissions are
		  changed from Windows side (irrespective of whether they are set under Windows
		  or not).
		</entry>
	  </row>

	</tbody>
  </tgroup>
</table>







<table>
  <title>'Samba options' tab (advanced settings)</title>
  <tgroup cols="2">
	<colspec colnum="1" colname="col1" colwidth="1*"/>
	<colspec colnum="2" colname="col2" colwidth="2*"/>
	<thead>
	  <row>
		<entry>Attribute</entry>
		<entry>Description</entry>
	  </row>
	</thead>
	<tbody>

	  <row>
		<entry>Locking</entry>
		<entry>
		  <para>
			Locking means preventing concurrent access to a file, making an
			exclusive access possible. When activating this checkbox, Samba will
			lock the access to files on the client's request.
		  </para>
		  <para>
			Deactivating this option can be useful for improving performance, yet
			it should generally not be set in shares with write access, since
			without locking, files might be corrupted due to concurrent access.
		  </para>
		</entry>
	  </row>

	  <row>
		<entry>Blocking locks</entry>
		<entry>
		  <para>
			Clients can send a lock request with a time limit for a certain area of an
			open file.
		  </para>
		  <para>
			In case Samba is unable to comply with a the lock request, and this option is
			activated, then Samba will - in periodical intervals until the expiry of the
			time limit - try to lock the requested file area. If the option is
			deactivated, no further attempt will be made.
		  </para>
		</entry>
	  </row>

	  <row>
		<entry>Strict locking</entry>
		<entry>
		  <para>
			If this option is activated, Samba will with each read or write access check
			if the file is locked, and will deny access if required. On some systems, this
			procedure can take a long time.
		  </para>
		  <para>
			If this option is deactivated, Samba will check if the file is locked on the
			client's request exclusively. Well configured clients ask for a check in all
			important cases, so that this option is usually unnecessary.
		  </para>
		</entry>
	  </row>

	  <row>
		<entry>Oplocks</entry>
		<entry>
		  If this option is activated, Samba will use so-called <emphasis>opportunistic locks</emphasis>.
		  This can improve the speed of file access considerably. However, the
		  option permits clients local caching of files on a large scale. In unreliable
		  networks it might therefore be necessary to do without Oplocks.
		</entry>
	  </row>

	  <row>
		<entry>Level 2 Oplocks</entry>
		<entry>
		  <para>When activating this option, Samba will support an extended form of Oplocks,
		  the so-called <emphasis>opportunistic read-only locks</emphasis> or <emphasis>Level 2 Oplocks</emphasis>. Windows
		  clients receiving a read/write Oplock for a file can then scale down this
		  Oplock to a read-only Oplock instead of having to abandon the Oplock
		  completely as soon as a second client opens the file. All clients supporting
		  Level 2 Oplocks, will then cache read access processes to the file
		  exclusively. Should one of the clients write to the file, all the other
		  clients will be asked to abandon their Oplocks, and to empty their caches.
		  </para>
		  <para>
			It is recommended to activate this option to speed up access to files which
			are normally not written to (e.g. programs / executable files).
		  </para>
		  <note>
			<para>
			  If kernel Oplocks are supported, Level 2 Oplocks will not be allowed, even if
			  the option is activated. Only if the checkbox <guimenu>Oplocks</guimenu> is also ticked, this
			  option will become valid.
			</para>
		  </note>
		</entry>
	  </row>

	  <row>
		<entry>Fake Oplocks</entry>
		<entry>
		  <para>
			When activating this option, Samba will allow all Oplock requests irrespective
			of the number of clients having access to a file. This method considerably
			improves performance, and is useful for shares which can only be accessed for
			reading (e.g. CD-ROMs), or where it is ensured that there can never occur a
			situation when several clients make access at the same time.
		  </para>
		  <para>
			If it cannot be excluded that several clients make reading and writing access
			to a file at the same time, this option should not be activated, since it may
			cause data loss.
		  </para>
		</entry>
	  </row>

	  <row>
		<entry>Block size</entry>
		<entry>
		  The block size in bytes in which unoccupied disk space is to be reported to the
		  clients. By default, this size is defined as 1024 bytes.
		</entry>
	  </row>

	  <row>
		<entry>Client-side caching policy</entry>
		<entry>
		  This option specifies in which way the clients are to cache the files of this
		  share offline. The available alternatives
		  are <emphasis>manual</emphasis>, <emphasis>documents</emphasis>, <emphasis>programs</emphasis>,
		  and <emphasis>disable</emphasis>.
		</entry>
	  </row>

	  <row>
		<entry>Hide files</entry>
		<entry>
		  <para>
			Files and directories to be accessed under Windows, yet not to be
			visible. Such files or directories are assigned the DOS attribute <emphasis>hidden</emphasis>.
		  </para>
		  <para>
			When entering the names of files and directories, upper and lower case letters
			are to be differentiated. Each entry is to be separated from the next by a
			slash. Since the slash can thus not be used for structuring path names, the
			input of path names is not possible. All files and directories of this name
			within the share will be hidden. The names may include spaces and the
			wildcards * and ?.
		  </para>
		  <para>
			As an example, <emphasis>/.*/test/</emphasis> hides all files and directories the names of which
			begin with a dot, or which are called test.
		  </para>
		  <note>
			<para>
			  Entries in this field have an impact on the speed of Samba since every time
			  particular contents of the share are to be displayed, all files and
			  directories have to be checked according to the active filters.
			</para>
		  </note>
		</entry>
	  </row>

	  <row>
		<entry>Postexec script</entry>
		<entry>
		  A script or command which is to be executed on the server if the connection to this share is
		  finished.
		</entry>
	  </row>

	  <row>
		<entry>Preexec script</entry>
		<entry>
		  A script or command which is to be executed on the server each time a connection to this
		  share is established.
		</entry>
	  </row>


	</tbody>
  </tgroup>
</table>



<table>
  <title>'Samba custom settings' tab (advanced settings)</title>
  <tgroup cols="2">
	<colspec colnum="1" colname="col1" colwidth="1*"/>
	<colspec colnum="2" colname="col2" colwidth="2*"/>
	<thead>
	  <row>
		<entry>Attribute</entry>
		<entry>Description</entry>
	  </row>
	</thead>
	<tbody>

	  <row>
		<entry>Custom share settings</entry>
		<entry>
		  <para>
			Apart from the properties which can, as a standard feature, be
			configured in a Samba share, this setting makes it possible to define
			further arbitrary Samba settings within the share. A list of available
			options can be obtained by the command <command>man smb.conf</command>.
			In <guimenu>Key</guimenu> the name of the option is to be
			entered, and in the <guimenu>Value</guimenu> field the value to be
			set. Double entries of configuration options are not checked.
		  </para>

		  <caution>
			<para>
			  The definition of extended Samba settings is only necessary in very special
			  cases. The options should be thoroughly checked since they might have
			  security-relevant effects.
			</para>
		  </caution>
		</entry>
	  </row>

	</tbody>
  </tgroup>
</table>

<table>
  <title>'NFS custom settings' tab (advanced settings)</title>
  <tgroup cols="2">
	<colspec colnum="1" colname="col1" colwidth="1*"/>
	<colspec colnum="2" colname="col2" colwidth="2*"/>
	<thead>
	  <row>
		<entry>Attribute</entry>
		<entry>Description</entry>
	  </row>
	</thead>
	<tbody>

	  <row>
		<entry>Custom NFS share settings</entry>
		<entry>
		  <para>
			Apart from the properties in the <guimenu>NFS</guimenu> tab, this setting makes it
			possible to define further arbitrary NFS settings for the share. A list of available
			options can be obtained by the command <command>man 5 exports</command>. Double entries
			of configuration options are not checked.
		  </para>

		  <caution>
			<para>
			  The definition of extended NFS settings is only necessary in special cases. The
			  options should be thoroughly checked since they might have security-relevant effects.
			</para>
		  </caution>
		</entry>
	  </row>
	</tbody>
  </tgroup>
</table>


<table>
  <title>'(Options)' tab</title>
  <tgroup cols="2">
	<colspec colnum="1" colname="col1" colwidth="1*"/>
	<colspec colnum="2" colname="col2" colwidth="2*"/>
	<thead>
	  <row>
		<entry>Attribute</entry>
		<entry>Description</entry>
	  </row>
	</thead>
	<tbody>

	  <row>
		<entry>Export for Samba clients</entry>
		<entry>
		  This option defines whether the share is to be exported for Samba clients.
		</entry>
	  </row>

	  <row>
		<entry>Export for NFS clients</entry>
		<entry>
		  This option defines whether the share is to be exported for NFS clients.
		</entry>
	  </row>

	</tbody>
  </tgroup>
</table>

</section>

<section id="shares::msdfs"><title>Support for MSDFS</title>
<para>
The Microsoft Distributed File System (MSDFS) is a distributed file
system which makes it possible to access shares spanning several servers
and paths as a virtual directory hierarchy. The load can then be
distributed across several servers.
</para>
<para>
Setting the <guimenu>MSDFS Root</guimenu> option for a share (see <xref linkend="shares::management"/>)
indicates that the shared directory is a share which can be used for the
MSDFS. References to other shares are only displayed in such an MSDFS root,
elsewhere they are hidden.
</para>
<para>
To be able to utilize the functions of a distributed file system, the
&ucsUCRV; <envar>samba/enable-msdfs</envar> has to be set to <literal>yes</literal> on a file
server. Afterwards Samba has to be restarted.
</para>
<para>
For creating a reference named <filename class="symlink">tofb</filename> from server <systemitem class="server">sa</systemitem>
within the share <filename class="directory">fa</filename> to share <filename class="directory">fb</filename> on the server
<systemitem class="server">sb</systemitem>, the following command has to be
executed in directory <filename class="directory">fa</filename>:
</para>
<programlisting language="sh">
ln -s msdfs:sb\\fb tofb
</programlisting>
<para>
	This reference will be displayed on every client capable of <acronym>MSDFS</acronym>
	(e.g. <systemitem class="osname">Windows 2000</systemitem> and <systemitem class="osname">Windows XP</systemitem>) as a regular directory.
</para>
<caution>
	<para>
Only restricted user groups should have write access to root
directories. Otherwise, it would be possible for users to redirect references
to other shares, and intercept or manipulate files. In addition, paths to the
shares, as well as the references are to be spelled entirely in lower case.
If changes are made in the references, the concerned clients have to be
restarted. Further information on this issue can be found in the Samba
documentation <biblioref linkend="samba3-howto-chapter-20"/> in the chapter 'Hosting a
Microsoft Distributed File System Tree'.
	</para>
</caution>
</section>

<section id="shares::quota">
  <title>Configuration of file system quota</title>
  <para>
	UCS allows the limiting of the storage space available to a user on a partition. These
	thresholds can be set as either a quantity of storage space (e.g., 500 MB per user) or a maximum
	number of files without a defined size limit.
  </para>

  <para>
	Two types of thresholds are differentiated:

	<itemizedlist>
	  <listitem>
		<para>
		  The <emphasis>hard limit</emphasis> is the maximum storage space a user can employ. If it
		  is attained, no further files can be saved.
		</para>
	  </listitem>

	  <listitem>
		<para>
		  If the <emphasis>soft limit</emphasis> is attained - which must be smaller than the hard
		  limit - and the storage space used is still below the hard limit, the user is given a
		  grace period of seven days to delete unused data. Once seven days have elapsed, it is
		  no longer possible to save or change additional files. A warning is displayed to users who
		  access a file system with an exceeded quota via CIFS (the threshold is based on the soft
		  limit).
		</para>
	  </listitem>
	</itemizedlist>
  </para>

  <para>
	If a quota value of <emphasis>0</emphasis> has been configured, it is evaluated as an unlimited quota.
  </para>

  <para>
	Quotas can either be defined via the UMC module
	<guimenu>Filesystem quotas</guimenu> or a policy for shares, see <xref linkend="shares::quota::policy"/>.
  </para>

  <para>
	File system quotas can only be applied on partitions with the file systems <systemitem class="filesystem">ext2</systemitem>, <systemitem class="filesystem">ext3</systemitem>, <systemitem class="filesystem">ext4</systemitem> and
	<systemitem class="filesystem">XFS</systemitem>. Before filesystem quotas can be configured, the use of file system quotas needs to be
	activated per partition, see <xref linkend="shares::quota::umc"/>.
  </para>

  <section id="shares::quota::umc">
	<title>Activating filesystem quota</title>
	<para>
	  In the UMC module <guimenu>Filesystem quotas</guimenu>, all the partitions are listed on which
	  quotas can be set up. Only partitions are shown which are currently mounted under a mount
	  point.
	</para>

	<figure id="shares:quota">
	  <title>Managing quota in the UMC</title>
	  <graphic scalefit="1" width="100%" fileref="illustrations44/quota-overview-en.png"/>
	</figure>

	<para>
	  The current quota status (activated/deactivated) is shown and can be changed with
	  <guimenu>Activate</guimenu> and <guimenu>Deactivate</guimenu>.
	</para>

	<para>
		If quota has been activated on a <systemitem class="filesystem">XFS</systemitem> root-partition, the system has to be rebooted.
	</para>

  </section>

  <section id="shares::quota::policy">
	<title>Configuring filesystem quota</title>

	<para>
	  Quotas can either be defined via the UMC module
	  <guimenu>Filesystem quotas</guimenu> or a policy for shares, see <xref
	  linkend="central:policies"/>. The configuration through a policy allows setting a default
	  value for all users, while the UMC module allows easy configuration of user-specific quota
	  values.
	</para>

	<para>
	  The user-specific quota settings can be configured with the UMC module <guimenu>Filesystem
	  quotas</guimenu>. The permitted storage quantities can
	  be set with the pencil symbol for all enabled partitions. All the settings are set
	  user-specifically. <guimenu>Add</guimenu> can be used to set the thresholds for soft and
	  hard limits for a user.
	</para>

	<para>
	  The quota settings can also be set with a <guimenu>User quota</guimenu> share policy. The
	  settings apply for all users of a share; it is not possible to establish different quota
	  limits for different users within one policy.
	</para>

	<para>
	  Quota settings that are applied via a quota policy are by default only applied once to the filesystem.
	  If the setting is changed, it will not be applied automatically on the next user login.
	  To inherit changed quota values, the option <emphasis>Reapply settings on every login</emphasis>
	  can be activated at the quota policy.
	</para>

	<para>
	  Quota policies can only be used on partitions for which the quota support is enabled in the
	  UMC module, see <xref linkend="shares::quota::umc"/>.
	</para>

	<note>
	  <para>
		Filesystem quotas always apply to a full partition.
		Even if the policies are defined for shares, they are used on complete partitions. If, for
		example, three shares are provided on one server which are all saved on the separate
		<filename class="directory">/var/</filename> partition and three different policies are configured and used,
		the most restrictive setting applies for the complete partition. If different quotas are used, it
		is recommended to distribute the data over individual partitions.
	  </para>
	</note>
  </section>

  <section id="shares::quota::apply">
	<title>Evaluation of quota during login</title>
	<para>
	  The settings defined in the UCS management system are evaluated and enabled during login to UCS systems by
	  the tool <command>univention-user-quota</command> run in the PAM stack.
	</para>

	<para>
	  If no quota are needed, the evaluation can be disabled by setting the &ucsUCRV;
	  <envar>quota/userdefault</envar> to <literal>no</literal>.
	</para>

	<para>
	  If the &ucsUCRV; <envar>quota/logfile</envar> is set to any file name, the activation of the
	  quotas is logged in the specified file.
	</para>
  </section>

  <section id="shares::quota::query">
	<title>Querying the quota status by administrators or users</title>
	<para>
	  A user can view the quota limits defined for a system using the command <command>repquota
	  -va</command>, e.g.:
	</para>

<screen>
*** Report for user quotas on device /dev/vdb1
Block grace time: 7days; Inode grace time: 7days
                        Block limits                File limits
User            used    soft    hard  grace    used  soft  hard  grace
----------------------------------------------------------------------
root      --      20       0       0              2     0     0
Administrator --       0       0  102400              0     0     0
user01    --  234472 2048000 4096000              2     0     0
user02    --       0 2048000 4096000              0     0     0

Statistics:
Total blocks: 8
Data blocks: 1
Entries: 4
Used average: 4.000000
</screen>

	<para>
	  Logged in users can use the <command>quota -v</command> command to view the applicable quota
	  limits and the current utilization.
	</para>

	<para>
	  Further information on the commands can be found in the man pages of the commands.
	</para>
  </section>

</section>

</chapter>
