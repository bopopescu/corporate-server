<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE chapter [
	<!ENTITY % extensions SYSTEM "../stylesheets/macros.ent" >
	<!ENTITY % DocBookDTD PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
	<!ENTITY % entities SYSTEM "../stylesheets/macros-de.ent" >
	%extensions;
	%DocBookDTD;
	%entities;
]>
<chapter id="backup:Datensicherung_mit_Bacula"><title>Datensicherung mit Bacula</title>

	<section id="backup:Einfuehrung"><title>Einführung</title>
		<para>
Bacula ist ein netzwerkfähiges Datensicherungsprogramm mit
einer Client/Server-Architektur. Es erlaubt die Datensicherung und
-wiederherstellung in heterogenen Umgebungen.
Dieses Kapitel bezieht sich auf das Paket <package>univention-bacula</package>,
welches als Komponente von UCS ausgeliefert wird. Im Univention App Center können
weitere Backup-Softwarelösungen ausgewählt und installiert werden, u.a. auch Bacula
Enterprise.
		</para>
		<para>
Bacula besteht aus einer Reihe von einzelnen Diensten und
Programmen, die die verschiedenen Aspekte der Datensicherung
kontrollieren:
		</para>
		<itemizedlist>
			<listitem>
				<simpara>
Der <emphasis>Director Daemon</emphasis> ist die zentrale Steuereinheit, in
dem die meisten Einstellungen zum Backup und Restore gespeichert sind.
Im Director werden die übrigen Bacula-Dienste konfiguriert.
				</simpara>
			</listitem>
		</itemizedlist>
		<itemizedlist>
			<listitem>
				<simpara>
Der <emphasis>Storage Daemon</emphasis> kontrolliert den Zugriff auf die
Backupmedien (z.B. eine Tape Library oder Festplatten) und nimmt die Anweisungen
des <emphasis>Directors</emphasis> entgegen, von welchen Systemen gesichert oder
zurückgesichert werden soll.
				</simpara>
			</listitem>
		</itemizedlist>
		<itemizedlist>
			<listitem>
				<simpara>
Der <emphasis>File Daemon</emphasis> ist auf den Clients installiert und
nimmt die Anweisungen des <emphasis>Directors</emphasis> entgegen, welche Dateien über
welchen <emphasis>Storage Daemon</emphasis> gesichert oder zurückgesichert werden sollen.
				</simpara>
			</listitem>
		</itemizedlist>
		<itemizedlist>
			<listitem>
				<simpara>
Der <emphasis>Catalog</emphasis> speichert alle Sicherungen in einer
Datenbank und ermöglicht das Rücksichern einzelner Dateien
oder Verzeichnisse.
				</simpara>
			</listitem>
		</itemizedlist>
		<itemizedlist>
			<listitem>
				<simpara>
Die <emphasis>Bacula Console</emphasis> ist das zentrale Benutzerinterface
für den <emphasis>Director Daemon</emphasis>. Von dort können <emphasis>
Backup/Restore Jobs</emphasis> gestartet werden. Auch administrative
Aufgaben - wie das Einbinden von Backupmedien - oder die Abfrage von
Statusinformationen werden darüber realisiert.
				</simpara>
			</listitem>
		</itemizedlist>
		<itemizedlist>
			<listitem>
				<simpara>
Das <emphasis>Bacula Administration Tool</emphasis> ist eine grafische
Version der <emphasis>Bacula Console</emphasis>.
				</simpara>
			</listitem>
		</itemizedlist>
		<para>
Die Backup-Einstellungen (zu sichernde Daten, Backup-Modus- und -zeiten)
werden also im <emphasis>Director Daemon</emphasis> konfiguriert und das
Backup automatisch oder über die <emphasis>Bacula Console</emphasis>
gestartet. Der <emphasis>File Daemon</emphasis> gibt dann die zu
sichernden Daten an den <emphasis>Storage Daemon</emphasis> weiter, der
für die Speicherung der Daten auf physikalischen Medien sorgt.
Zusätzlich werden Meta-Information zu den Backups über den
<emphasis>Catalog</emphasis> in einer Datenbank gesichert.
		</para>
		<figure id="backup:bacula"><title>Bacula Schema</title>
			<graphic scalefit="1" width="60%" align="center" fileref="illustrations44/bacula.png"/>
		</figure>
	</section>

	<section id="backup:data">
	  <title>Umfang der Datensicherung auf einem UCS-System</title>
	  <para>
		Wenn ausreichend Sicherungskapazität zur Verfügung steht, ist es empfehlenswert ein System
		vollständig zu sichern. Allerdings müssen  nicht alle Daten auf einem UCS-System gesichert
		werden. Die mit UCS mitgelieferten Programmpakete beispielsweise stehen nach einer
		Neuinstallation ohnehin wieder zur Verfügung.
	  </para>

	  <para>
		Die folgenden Informationen geben nur einen Überblick über ein typisches System. Je nach
		installierter Software können sich Abweichungen ergeben. Dies muss im Einzelfall geprüft
		werden und sollte mit einem testweisen Restore getestet werden!
	  </para>

	  <para>
		Die Verzeichnisse <filename class="directory">/dev/</filename>, <filename class="directory">/proc/</filename> und <filename class="directory">/sys/</filename> enthalten nur
		Dateien, die vom Kernel automatisch generiert werden, sie brauchen nicht gesichert werden.
	  </para>

	  <para>
		Diese Daten sollten in der Regel immer gesichert werden: Die Verzeichnisse
		<filename class="directory">/home/</filename> und <filename class="directory">/root/</filename> enthalten Benutzerdaten, in
		<filename class="directory">/etc/</filename> wird die Konfiguration des UCS-Systems gespeichert und das
		Verzeichnis <filename class="directory">/var/</filename> enthält Laufzeitdaten wie etwa die Mails eines
		Mailservers.
	  </para>

	  <para>
		Die Verzeichnisse <filename class="directory">/bin/</filename>, <filename class="directory">/boot</filename>,
		<filename class="directory">/lib/</filename>, <filename class="directory">/usr/</filename> und <filename class="directory">/sbin/</filename>
		enthalten im Normalfall nur Programme/Daten, die durch die UCS-Installation mitgeliefert
		werden.
	  </para>

	</section>


	<section id="backup:Installation"><title>Installation</title>
		<para>
In dieser Dokumentation wird davon ausgegangen, dass sich der
<emphasis>Director Daemon</emphasis>, <emphasis>Storage
Daemon</emphasis> und <emphasis>Catalog</emphasis> auf einem System, dem
Bacula-Server, befinden. Diese Komponenten werden durch Installation des
Pakets <package>univention-bacula</package> eingerichtet.
		</para>
		<para>
Der <emphasis>File Daemon</emphasis> muss auf allen System, auf denen
Daten gesichert werden sollen, mit dem Paket
<package>bacula-client</package> installiert werden.
		</para>
		<para>
Die Datenspeicherung des Catalogs erfolgt in einer PostgreSQL-Datenbank,
die während der Installation angelegt und eingerichtet wird. Die
Zugriffsinformationen dieser Datenbank (Datenbankname, Name/Passwort des
Datenbankbenutzers) stehen anschließend in der Datei
<filename>/etc/dbconfig-common/bacula-director-pgsql.conf</filename> in
den Feldern <varname>dbc_dbpass</varname> und
<varname>dbc_dbuser</varname>.
		</para>
	</section>

	<section id="backup:Konfiguration_der_Backupkomponenten"><title>Konfiguration der Backupkomponenten</title>
		<para>
Die Konfiguration der Bacula-Dienste erfolgt über verschiedene
Konfigurationsdateien. Im folgenden werden wichtige Optionen
vorgestellt, weiterführende Konfigurations-Optionen werden in der
Bacula-Dokumentation beschrieben.
		</para>
		<section id="bacula:directory"><title>Directory Daemon</title>
			<para>
Der Directory Daemon wird über den Abschnitt
<emphasis>Director</emphasis> der Konfigurationsdatei
<filename>/etc/bacula/bacula-dir.conf</filename> verwaltet.
			</para>
			<para>
Die Standardwerte können beibehalten werden, lediglich die Option
<varname>DirAddress</varname> sollte von
<systemitem class="ipaddress">127.0.0.1</systemitem>, also <systemitem class="systemname">localhost</systemitem>, auf die IP-Adresse des
Bacula-Servers geändert werden. Außerdem sollte das
<varname>Password</varname>-Feld gesetzt werden:
			</para>
			<programlisting>
Director {
  Name = sec-dir
  DIRport = 9101
  QueryFile = "/etc/bacula/scripts/query.sql"
  WorkingDirectory = "/var/lib/bacula"
  PidDirectory = "/var/run/bacula"
  Maximum Concurrent Jobs = 1
  Password = "master-dir-password"
  Messages = Daemon
  DirAddress = 192.0.2.125
}
			</programlisting>
		</section>
		<section id="backup:Storage"><title>Storage</title>
			<para>
Der Storage Daemon wird über den Abschnitt <emphasis>Storage</emphasis>
der Konfigurationsdatei <filename>/etc/bacula/bacula-sd.conf</filename>
verwaltet.
			</para>
			<para>
Hier können die Vorgabewerte weitgehend beibehalten werden; nur die
Option <varname>SDAddress</varname> sollte auf die IP-Adresse des
Storage Daemons angepasst werden.
			</para>
			<programlisting>
Storage {
  Name = sec-sd
  SDPort = 9103
  WorkingDirectory = "/var/lib/bacula"
  Pid Directory = "/var/run/bacula"
  Maximum Concurrent Jobs = 20
  SDAddress = 192.0.2.125
}
			</programlisting>
			<para>
Im Abschnitt <emphasis>Director</emphasis> wird auf den Bacula-Server
verwiesen und ein Passwort gesetzt, das dieser beim Zugriff verwenden
muss:
			</para>
			<programlisting>
Director {
  Name = sec-dir
  Password = "master-storage-password"
}
			</programlisting>
		</section>
		<section id="backup:File_Daemon"><title>File Daemon</title>
			<para>
Der File Daemon wird über die Konfigurationsdatei
<filename>/etc/bacula/bacula-fd.conf</filename> verwaltet und muss auf
allen Systemen eingerichtet werden, die gesichert werden sollen.
			</para>
			<para>
Im Abschnitt <emphasis>Director</emphasis> muss die Option
<varname>Name</varname> auf den Namen des
<emphasis>Directors</emphasis> gesetzt werden (siehe <xref
linkend="bacula:directory"/>). Pro System muss ein Client-Passwort
festgelegt werden. Außerdem muss hier die Option
<varname>FDAddress</varname> im Abschnitt
<emphasis>FileDaemon</emphasis> auf die IP-Adresse des Rechners gesetzt
werden.
			</para>
			<programlisting>
Director {
  Name = sec-dir
  Password = "client-password"
}
			</programlisting>
			<programlisting>
FileDaemon {
  Name = sec-fd
  FDport = 9102
  WorkingDirectory = /var/lib/bacula
  Pid Directory = /var/run/bacula
  Maximum Concurrent Jobs = 20
  FDAddress = 192.0.2.125
}
			</programlisting>
			<para>
Jeder zu sichernde Rechner muss außerdem im Director mit dem oben
festgelegten Passwort registriert in der Datei
<filename>/etc/bacula/bacula-dir.conf</filename> registriert werden:
			</para>
			<programlisting>
Client {
  Name = client-host
  Address = 192.0.2.125
  FDPort = 9102
  Catalog = MyCatalog
  Password = "client-password"
  File Retention = 30 days
  Job Retention = 6 months
  AutoPrune = yes
}
			</programlisting>
		</section>
		<section id="backup:Bacula_Console"><title>Bacula Console</title>
			<para>
Die Bacula Console wird die Konfigurationsdatei
<filename>/etc/bacula/bconsole.conf</filename> verwaltet.
			</para>
			<para>
Hier muss im Abschnitt <emphasis>Director</emphasis> die Adresse des
Rechners, auf dem der Director Daemon läuft und dessen Passwort (siehe
<xref linkend="bacula:directory"/>) angegeben werden:
			</para>
			<programlisting>
  Name = localhost-dir
  DIRport = 9101
  address = 192.0.2.125
  Password = "master-dir-password"
			</programlisting>
		</section>
		<section id="backup:Firewall-Anpassungen"><title>Firewall-Anpassungen</title>
			<para>
In der Grundeinstellung von Univention Firewall werden eingehende
Pakete für alle Ports blockiert/abgelehnt.
			</para>
			<para>
Die für Bacula verwendeten Ports müssen entsprechend freigegeben werden.
Auf allen Systemen muss der Zugriff auf den Filedaemon freigegeben
werden. Dies erfolgt durch Setzen der &ucsUCRV;
<envar>security/packetfilter/package/bacula/tcp/9102/all</envar> auf
<literal>ACCEPT</literal> und einen anschließenden Neustart von
Univention Firewall.
			</para>
			<para>
Auf dem Bacula-Server muss zusätzlich Port 9103 nach dem gleichen
Schema freigegeben werden.
			</para>
			<para>
In einem verteilten Setup müssen ggf. noch die Ports 9101/TCP
(Verbindungen von der Console zum Directory) und 9103/TCP
(Verbindungen von Directory und File Daemon zum Storage Daemon
freigegeben werden.
			</para>
		</section>
	</section>

	<section id="backup:Konfiguration_des_Backups_Intervall_Daten_etc"><title>Konfiguration des Backups (Intervall, Daten etc.)</title>
		<para>
In Bacula werden <emphasis>Ressourcen</emphasis> definiert, die in einem
<emphasis>Job</emphasis> zusammengefasst eine bestimmte Aktion, wie das
Backup der Daten X vom Rechner Y auf das Medium Z, repräsentieren. Es
gibt u.a. folgende Ressourcen:
		</para>
		<itemizedlist>
			<listitem>
				<simpara>
Der Zugriff auf physikalische Backupmedien wird in einem
<emphasis>Device</emphasis> definiert, z.B. der Gerätetyp und wie es
angeschlossen wurde.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
Die verschiedenen Backupmedien (z.B. Bänder oder Festplatten) werden als
<emphasis>Volume</emphasis> bezeichnet. Volumes können manuell, aber
auch direkt vom Director erzeugt werden. Bacula versieht die Volumes
dabei mit Software-Labeln zur Identifizierung.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
Bacula verwaltet die Volumes in <emphasis>Pools</emphasis>. Dort sind
beliebig viele Volumes zusammengeschlossen und deren Eigenschaften
definiert. Backups erfolgen ausschließlich auf Pools. Bacula verwaltet
dabei die Auslastung der Volumes und überwacht, wann Volumes wieder
überschrieben werden dürfen.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
In einem <emphasis>Schedule</emphasis> wird definiert, wann eine Aktion
ausgeführt wird. Hier können zusätzlich weitere Optionen für eine Aktion
gesetzt oder überschrieben werden.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
Ein <emphasis>FileSet</emphasis> definiert, welche Dateien oder
Verzeichnisse gesichert werden sollen, ob diese komprimiert werden und
welche Metainformationen (z.B. ACLs) gesichert werden.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
Jeder Rechner, von dem Daten gesichert werden sollen, wird in Bacula als
<emphasis>Client</emphasis> behandelt. <emphasis>Client</emphasis>-Jobs
definieren, um welchen Rechner es sich handelt und wie auf den
<emphasis>File Daemon</emphasis> des Clients zugegriffen werden kann
(z.B. Passwort).
				</simpara>
			</listitem>
		</itemizedlist>
		<para>
Ein <emphasis>Job</emphasis> führt alle die oben genannten Informationen
zusammen. Jobs sind entweder vom Typ Restore oder Backup. Außerdem wird
hier das Sicherungsverfahren der Backup-Läufe (inkrementelle, volle oder
differentielle Sicherung) definiert.
		</para>
		<para>
Mit <emphasis>Messages</emphasis> wird definiert, wie mit
Bacula-Statusnachrichten umgegangen werden soll. Meldungen können u.a.
in Log-Dateien geschrieben, auf der Konsole angezeigt oder per Email
verschickt werden.
		</para>
		<para>
In <biblioref linkend="bacula-config-example"/> findet sich eine
Beispiel-Konfiguration, die als Vorlage für Backups verwendet werden
kann und die oben genannten Ressourcen weitergehend beschreibt.
		</para>
	</section>

	<section id="backup:Administration_ueber_die_Bacula_Console"><title>Administration über die Bacula Console</title>
		<para>
Mit der <emphasis>Bacula Console</emphasis> können Informationen über
den Status von Bacula ausgelesen, Backup-Jobs gestartet oder Daten
zurückgesichert werden. Gestartet wird sie mit dem Befehl
<command>bconsole</command>.
		</para>
		<para>
Das Kommando <command>status</command> zeigt Status-Informationen an.
Es wird z.B. eine Liste der anstehenden, laufenden und beendeten Jobs
des Directors ausgegeben.
		</para>
		<para>
Backup-Jobs können automatisch - z.B. an jedem Wochentag - gestartet
werden. Backups und Rücksicherungen können aber auch interaktiv über
die Bacula Console gestartet werden:
		</para>
		<itemizedlist>
			<listitem>
				<simpara>
Mit dem Kommando <command>run</command> kann ein Job gestartet
werden. Es wird daraufhin ein Liste der verfügbaren Jobs angezeigt, aus
denen der gewünschte Job ausgewählt werden muss. Mit dem Kommando
<command>mod</command> können Optionen wie der Sicherungstyp für den
Job gesetzt bzw. geändert werden. Nach Bestätigung durch
<userinput>yes</userinput> wird der Job gestartet.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
Mit dem Kommando <command>restore</command> können Daten
zurückgesichert werden. Nun kann mit <command>3 (Enter list of comma
separated JobIds to select)</command> ein Backup-Job ausgewählt werden,
von dem Daten zurückgesichert werden sollen. Dann erscheint ein
Dateibrowser, in dem mit den Standardkommandos <command>cd</command> und
<command>ls</command> navigiert werden kann. Hier können mittels
<command>mark FILE</command> bzw. <command>mark -r DIR</command>
Dateien bzw. Verzeichnisse für die Rücksicherung markiert werden. Sind
alle gewünschten Daten markiert, wird der Dateibrowser mit
<command>done</command> beendet. Nach der Angabe des Clients und der
Bestätigung einiger Optionen für den Restore-Job (z.B. wohin die Daten
kopiert werden sollen) kann der Restore-Job mit <userinput>yes</userinput>
gestartet werden. Nach Abschluss befinden sich die ausgewählten Daten im
konfigurierten Rücksicherungsverzeichnis. Falls für ein Backup oder
Restore ein Tape benötigt wird, das sich nicht im Laufwerk befindet,
fordert Bacula dieses Tape explizit an.
				</simpara>
			</listitem>
		</itemizedlist>
		<para>
Weitere Informationen über die Bacula Console können der
Bacula-Dokumentation bzw. dem Kommando <command>help</command>
entnommen werden.
		</para>
	</section>

	<section id="backup:Sicherung_der_Catalog-Datenbank"><title>Sicherung der Catalog-Datenbank</title>
		<para>
Die Metadaten der Sicherung werden im Catalog gespeichert. Standardmäßig
wird der Catalog in einer PostgreSQL-Datenbank gespeichert, die
ebenfalls gesichert werden sollte. Dies erfolgt über einen Backup-Job,
der einen SQL-Dump der
Datenbank sichert.
		</para>
		<programlisting>
# Backup the catalog database (after the nightly save)
Job {
  Name = "BackupCatalog"
  JobDefs = "DefaultJob"
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl catalog-name
  RunBeforeJob = "/etc/bacula/scripts/make_catalog_backup.pl MyCatalog"
  # This deletes the copy of the catalog
  RunAfterJob = "/etc/bacula/scripts/delete_catalog_backup"
  Write Bootstrap = "/var/lib/bacula/%n.bsr"
  Priority = 11
}

...

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 23:10
}

...

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/lib/bacula/bacula.sql"
  }
}
		</programlisting>
		<para>
Über die Anweisungen <varname>RunBeforeJob</varname> und
<varname>RunAfterJob</varname> werden vor bzw. nach der eigentlichen
Sicherung Skripte ausgeführt. Im Falle des Catalogs wird mit
<command>make_catalog_backup</command> vor der Sicherung ein SQL-Dump
der Catalog-Datenbank erzeugt und unter
<filename>/var/lib/bacula/bacula.sql</filename> gespeichert. Nach
erfolgter Sicherung wird diese Datei wieder entfernt.
		</para>
		<para>
Zusätzlich wird für das Backup des Catalogs mit <varname>Write
Bootstrap</varname> eine Bootstrap-Datei erzeugt. In dieser Datei wird
protokolliert, wie die Daten wiederhergestellt werden können, d.h. auf
welchem Volume sie gespeichert sind und wo auf dem Volume sie sich
befinden. Normalerweise übernimmt dies der Catalog selbst, für den Fall
der Rücksicherung der Catalog-Datenbank wird jedoch die Bootstrap-Datei
benötigt. Sie sollte unabhängig von Bacula zusätzlich gesichert werden.
		</para>
		<para>
Der Backup-Job des Catalogs, mit dazugehörigem
<emphasis>FileSet</emphasis> und <emphasis>Schedule</emphasis>, ist als
Vorlage bereits in der Konfiguration des <emphasis>Director
Daemon</emphasis> enthalten und muss lediglich angepasst werden.
		</para>
	</section>

	<section id="backup:Weiterfuehrende_Informationen"><title>Weiterführende Informationen</title>
		<para>
Weitere Informationen zur Bacula-Einrichtung sind unter anderem auf den
folgenden Webseiten zu finden:
		</para>
		<itemizedlist>
			<listitem><simpara><ulink url="http://www.bacula.org/"/></simpara></listitem>
			<listitem><simpara><ulink url="http://wiki.bacula.org/doku.php"/></simpara></listitem>
			<listitem><simpara><ulink url="http://www.bacula.org/5.2.x-manuals/en/main/main.pdf"/></simpara></listitem>
			<listitem><simpara><ulink url="https://de.wikipedia.org/wiki/Bacula"/></simpara></listitem>
			<listitem><simpara><ulink url="http://old.bacula.org/de/dev-manual/Kurzanleitung.html"/></simpara></listitem>
		</itemizedlist>
	</section>

</chapter>
