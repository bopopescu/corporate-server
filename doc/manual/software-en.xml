<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE chapter [
	<!ENTITY % extensions SYSTEM "../stylesheets/macros.ent" >
	<!ENTITY % DocBookDTD PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
	<!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >
	%extensions;
	%DocBookDTD;
	%entities;
]>
<chapter id="computers::softwaremanagement">
  <title>Software deployment</title>

  <section id="computers:Introduction">
	<title>Introduction</title>
	<para>
	  The software deployment integrated in UCS offers extensive possibilities for
	  the rollout and updating of UCS installations. Security and version updates can
	  be installed via &ucsUMC;, a command line tool and
	  policy-based. This is described in the <xref linkend="software::ucs-updates"/>.
	  The UCS software deployment does not support the updating of Microsoft Windows
	  systems. An additional Windows software distribution is required for this.
	</para>

	<para>
	  For larger installations, there is the possibility of establishing a local
	  repository server from which all further updates can be performed
	  (see <xref linkend="software::configrepo"/>). This
	  repository server either procures its packages from the Univention online
	  repository or, in environments without Internet access, also from offline
	  updates in the form of ISO images.
	</para>

	<para>
	  The UCS software deployment is based on the underlying Debian package
	  management tools, which are expanded through UCS-specific tools. The different
	  tools for the installation of software are introduced in <xref
	  linkend="computers::softwaremanagement::installsoftware"/>.
	  The installation of version and errata updates can be automated via policies,
	  see <xref linkend="computers::softwaremanagement::maintenancepolicy"/>
	</para>

	<para>
	  The software monitor provides a tool with which all package installations
	  statuses can be centrally stored in a database, see <xref
	  linkend="computers::softwaremonitor"/>.
	</para>

	<para>
	  The initial installation of UCS systems is not covered in this chapter, but
	  is documented in <xref linkend="installation:chapter"/> instead.
	</para>
  </section>

  <section id="computers:Differentiation_of_update_variants__UCS_versions">
	<title>Differentiation of update variants / UCS versions</title>
	<para>
	  Four types of UCS updates are differentiated:
	</para>

	<itemizedlist>
	  <listitem><simpara>
		<emphasis>Major releases</emphasis> appear approximately every three to four
		years. Major releases can differ significantly from previous major releases in
		terms of their scope of services, functioning and the software they contain.
	  </simpara></listitem>

	  <listitem><simpara>
		During the maintenance period of a major release, <emphasis>minor
		Releases</emphasis> are released approx. every 10-12 months. These updates
		include corrections to recently identified errors and the expansion of the
		product with additional features. At the same time and as far as this is
		possible, the minor releases are compatible with the previous versions in terms
		of their functioning, interfaces and operation. Should a change in behavior
		prove practical or unavoidable, this will be noted in the release notes when
		the new version is published.
	  </simpara></listitem>


	  <listitem><simpara>
		Univention continuously releases <emphasis>errata updates</emphasis>. Errata updates
		provide fixes for security vulnerabilities and bugfixes/smaller enhancements to make them
		available to customer systems quickly. An overview of all errata updates can be found at
		<ulink url="https://errata.software-univention.de/"/>.
	  </simpara></listitem>

	  <listitem><simpara>
		<emphasis>Patchlevel releases</emphasis> are released approx. every three months and combine
		all errata updates published until then.
	  </simpara> </listitem>

	</itemizedlist>

	<para>
	  Every released UCS version has an unambiguous version number; it is composed of
	  a figure (the major version), a full stop, a second figure (the minor version),
	  a hyphen and a third figure (the patch level version). The version UCS 4.2-1
	  thus refers to the first patch level update for the second minor update for the
	  major release UCS 4.
	</para>

	<para>
	  The <emphasis>pre-update script</emphasis> <filename>preup.sh</filename> is run before every release update.
	  It checks for example whether any problems exist, in which case the update is canceled in a controlled manner.
	  The <emphasis>post-update script</emphasis> <filename>postup.sh</filename> is run at the end of the update to perform additional cleanups, if necessary.
	</para>

	<para>
	  Errata updates always refer to certain minor releases, e.g., for UCS
	  4.4. Errata updates can generally be installed for all patch level versions of
	  a minor release.
	</para>

	<para>
	  If new release or errata updates are available, a corresponding notification is
	  given when a user logs on to &ucsUMC;.
	  The availability of new updates is also notified via e-mail; the corresponding
	  newsletters - separated into release and error updates - can be subscribed on
	  the Univention website.
	  A changelog document is published for every release update listing the updated
	  packages, information on error corrections and new functions and references to
	  the Univention Bugzilla.
	</para>
  </section>

  <section id="software:appcenter">
	<title>Univention App Center</title>
	<para>
	  The Univention App Center allows simple integration of software components in a UCS
	  domain. The applications are provided both by third parties and by Univention itself
	  (e.g., UCS@school). The maintenance and support for the applications are provided by the
	  respective manufacturer.
	</para>

	<figure id="appcenter-overview"><title>Overview of applications available in the App Center</title>
	<graphic scalefit="1" width="100%" fileref="illustrations44/appcenter_overview_en.png"/>
	</figure>

	<para>
		The Univention App Center can be opened via the UMC module <emphasis>App Center</emphasis>. It
		shows by default all installed as well as available software components. <guimenu>Search
			applications...</guimenu> can be used to search for available applications. Furthermore, the
		applications can also be filtered using the <guimenu>Categories</guimenu>. More filters like the
		<guimenu>App Badges</guimenu> and the <guimenu>App License</guimenu> can be used. For example,
		the view can be limited to applications with the categories <userinput>Education</userinput> or
		<userinput>Office</userinput>. To only show the <emphasis>Recommended Apps</emphasis> for theses
		categories, it is sufficient to activate the appropriate filter.
	</para>

	<para>
		If you click on one of the displayed applications, further details on it are shown (e.g.,
		description, manufacturer, contact information and screenshots or videos). The
		<guimenu>Notification</guimenu> field displays whether the manufacturer of the software
		component is notified when it is installed/uninstalled. A rough classification of the licensing
		can be found under the <guimenu>License</guimenu> section. Some applications provide a
		<guimenu>Buy</guimenu> button with a link to detailed licensing information. For all other
		applications, it is recommended to contact the the manufacturer of the application about
		detailed licensing information using the e-mail address shown under <guimenu>Contact</guimenu>.
	</para>

	<figure id="appcenter-details"><title>Details for an application in the App Center</title>
	<graphic scalefit="1" width="100%" fileref="illustrations44/appcenter_details_en.png"/>
	</figure>

	<para>
		With <emphasis>Vote Apps</emphasis> there is a special form of Apps in the App Center that do
		not install anything on the UCS system. Voting helps Univention and the potential app provider
		to determine the interest in this app. Vote apps are usually only displayed for a limited voting
		period. That Vote Apps are available, can be recognized by the shown <guimenu>Vote
			Apps</guimenu> filter option in the App Center overview.
	</para>

	<figure id="appcenter-vote-apps"><title>Example Vote Apps in App Center overview and detail view</title>
	<graphic scalefit="1" width="100%" fileref="illustrations44/vote_apps_en.png"/>
	</figure>

	<para>
	  Some applications may not be compatible with other software packages from UCS. For instance,
	  most groupware packages require the UCS mailstack to be uninstalled. Every application checks
	  whether incompatible versions are installed and then prompts which
	  <guimenu>Conflicts</guimenu> exist and how they can be resolved. The installation of these
	  packages is then prevented until the conflicts have been resolved.
	</para>

	<para>
	  Some components integrate packages that need to be installed on the &ucsMaster; (usually LDAP
	  schema extensions or new modules for the UCS management system). These packages are
	  automatically installed on the &ucsMaster;. If this is not possible, the installation is
	  aborted. In addition, the packages are set up on all accessible &ucsBackup; systems.
	  If several UCS systems are available in the domain, it can be selected on which system the
	  application is to be installed.
	</para>

	<para>
		Some applications use the container technology <application>Docker</application>.
		In these cases, the application (and its direct environment) is encapsulated from the rest and both security as well as the compatibility with other applications increased.
	</para>

	<para> From a technical perspective, the app is started as Docker container and joined into the
		UCS domain as &ucsMember;. A corresponding computer object is created for the &ucsMember; in the
		LDAP directory.
	</para>

	<para>
		On the network side, the container can only be reached from the computer on which the app is installed.
		The app can, however, open certain ports, which can be forwarded from the actual computer to the container.
		UCS' firewall is correspondingly configured automatically to allow access to these ports.
	</para>

	<para>
		If a command line is required in the app's environment, the first step is to switch to the container.
		This can be done by running the following command (using the fictitious app <application>demo-docker-app</application> as an example in this case):
	</para>
	<programlisting language="sh">
univention-app shell demo-docker-app
	</programlisting>

	<para>
		<wordasword>Docker apps</wordasword> can be further configured via the UMC module.
		The app can be started and stopped and the <guimenu>autostart</guimenu> option be set:
		<itemizedlist>
			<listitem><simpara>
					<guilabel>Started automatically</guilabel> ensures that the app is started automatically when the server is started up.
			</simpara></listitem>
			<listitem><simpara>
					<guilabel>Started manually</guilabel> prevents the app from starting automatically, but it can be started via the UMC module.
			</simpara></listitem>
			<listitem><simpara>
					<guilabel>Starting is prevented</guilabel> prevents the app from starting at any time; it cannot even be started via the UMC module.
			</simpara></listitem>
		</itemizedlist>
		In addition, apps can also be adjusted using additional parameters.
		The menu for doing so can be opened using the <guibutton>App Settings</guibutton> button of an installed app.
	</para>

	<figure id="appcenter-configure"><title>Setting of an application in the App Center</title>
	<graphic scalefit="1" width="90%" align="center" fileref="illustrations44/appcenter_configure_en.png"/>
	</figure>

	<para>
	  After its installation, one or several new options are shown when clicking on the icon
	  of an application: <guimenu>Uninstall</guimenu> removes an application.
	  <guimenu>Open</guimenu> refers you to a website or a UMC module with which you can further configure or use
	  the installed application. For example, if you install the Horde application, this link takes
	  you to the login window. This option is not displayed for applications which do not have a web
	  interface or a UMC module.
	</para>

	<para>
	  Updates for applications are published independently of the &ucsUCS; release cycles. If a new
	  version of an application is available, the <guimenu>Upgrade</guimenu> menu item is
	  shown, which starts the installation of the new version. If updates are available, a
	  corresponding message is also shown in the UMC module <guimenu>Software update</guimenu>.
	  An overview of the installed applications in the domain can be opened under <guimenu>Installed
	  applications</guimenu> on the UMC start page.
	</para>

	<para>
	  Installations and the removal of packages are documented in the
	  <filename>/var/log/univention/management-console-module-appcenter.log</filename> log file.
	</para>

  </section>

  <section id="software::ucs-updates">
	<title>Updates of UCS systems</title>
	<para>
	  There are two ways to update UCS systems; either on individual systems (via
	  &ucsUMC; or command line) or via a &ucsUMC; computer policy for larger groups
	  of UCS systems.
	</para>

	<section id="computers:Update_strategy_in_environments_with_more_than_one_UCS_system">
	  <title>Update strategy in environments with more than one UCS system</title>
	  <para>
		In environments with more than one UCS system, the update order of the UCS
		systems must be borne in mind:
	  </para>

	  <para>
		The authoritative version of the LDAP directory service is maintained on the
		&ucsMaster; and replicated on all the remaining LDAP servers of the UCS
		domain. As changes to the LDAP schemes (see <xref linkend="domain:ldap:schemata"/>) can occur during release updates, the
		&ucsMaster; must always be the first system to be updated during a release
		update.
	  </para>

	  <para>
		It is generally advisable to update all UCS systems in one maintenance window
		whenever possible. If this is not possible, all not-updated UCS systems should
		only be one release version older compared with the &ucsMaster;.
	  </para>

	</section>

	<section id="computers:Updating_individual_systems_via_the_UMC">
	  <title>Updating individual systems via &ucsUMC;</title>
	  <para>
		The <guimenu>Software update</guimenu> module allows the installation of release
		updates and errata updates.
	  </para>

	  <para>
		Figure <xref linkend="software-umcupdate"/> shows the overview page of the
		module. The currently installed version is displayed under <guimenu>Release
		updates</guimenu> in the upper part of the dialogue box.
	  </para>

	  <figure id="software-umcupdate"><title>Updating a UCS system in UMC</title>
	  <graphic scalefit="1" width="100%" fileref="illustrations44/software_onlineupdate_en.png"/>
	  </figure>

	  <para>
		If a newer UCS version is available, a select list is displayed. After clicking
		on <guimenu>Install release updates</guimenu> and confirmation all updates up
		to the respective version are installed. Before the installation process is
		started, a message will be displayed informing the user of possible
		restrictions of the server services during the update. Any intermediate
		versions are also installed automatically.
	  </para>

	  <para>
		Clicking on <guimenu>Install available errata updates</guimenu> installs all
		the available errata updates for the current release and all installed
		components.
	  </para>

	  <para>
		<guimenu>Check for package updates</guimenu> activates an update of the package
		sources currently entered. This can be used, for example, if an updated version
		is provided for a component.
	  </para>

	  <para>
		The messages created during the update are written to the file
		<filename>/var/log/univention/updater.log</filename>
	  </para>
	</section>

	<section id="computers:Updating_individual_systems_via_the_command_line">
	  <title>Updating individual systems via the command line</title>
	  <para>
		The following steps must be performed with <systemitem class="username">root</systemitem> rights.
	  </para>

	  <para>
		An individual UCS system can be updated using the
		<command>univention-upgrade</command> command in the command line. A check is
		performed to establish whether new release or application updates are available and these are then
		installed if a prompt is confirmed. In addition, package updates are also
		performed (e.g., in the scope of an errata update).
	  </para>

	  <para>
		In the basic setting, the packages to be updated are loaded from a repository
		via the network. If a local repository is used (see <xref linkend="software::createrepo"/>),
		release updates can alternatively also be installed via update DVD
		images, which are either imported as ISO files or from a drive.
		This is done by running <command>univention-upgrade</command> with the
		parameters <option>--iso=<replaceable>ISOIMAGEFILE</replaceable></option> or
		<option>--cdrom=<replaceable>DRIVE</replaceable></option>.
	  </para>

	  <para>
		Remote updating over SSH is not advisable as this may result in the update
		procedure being aborted. If updates should occur over a network connection
		nevertheless, it must be verified that the update continues despite
		disconnection from the network. This can be done, for example, using the tools
		<command>screen</command> and <command>at</command>, which are installed on all
		system roles.
	  </para>

	  <para>
		The messages created during the update are written to the file
		<filename>/var/log/univention/updater.log</filename>
	  </para>
	</section>

	<section id="computers::softwaremanagement::releasepolicy">
	  <title>Updating systems via a policy</title>
	  <para>
		An update for more than one computer can be configured with an
		<guimenu>Automatic updates</guimenu> policy in the UMC modules for computer
		and domain management (see <xref linkend="central:policies"/>).
	  </para>

	  <figure id="software-policyupdate">
		<title>Updating UCS systems using an update policy</title>
		<graphic scalefit="1" width="100%" fileref="illustrations44/software_policy_en.png"/>
	  </figure>

	  <para>
		A release update is only run when the <guimenu>Activate release updates</guimenu>
		selection field is activated.
	  </para>

	  <para>
		The <guimenu>Update to this UCS version</guimenu> input field includes the version number
		up to which the system should be updated, e.g., <emphasis>4.4-0</emphasis>. If
		no entry is made, the system continues updating to the highest available
		version number.
	  </para>

	  <para>
		The point at which the update should be performed is configured via a
		<guimenu>Maintenance</guimenu> policy (see <xref
		linkend="computers::softwaremanagement::maintenancepolicy"/>).
	  </para>

	  <para>
		The messages created during the update are written to the file
		<filename>/var/log/univention/updater.log</filename>.
	  </para>
	</section>

	<section id="computers:Postprocessing_of_release_updates">
	  <title>Postprocessing of release updates</title>
	  <para>
		Once a release update has been performed successfully, a check should be made
		for whether new or updated join scripts need to be run.
	  </para>

	  <para>
		Either the <emphasis>Domain join</emphasis> UMC module or the command
		line program <command>univention-run-join-scripts</command> is used for
		checking and starting the join scripts (see <xref
		linkend="linux-domaenenbeitritt"/>).
	  </para>
	</section>

	<section id="computers:troubleshooting">
	  <title>Troubleshooting in case of update problems</title>
	  <para>
		The messages generated during updates are written to the
		<filename>/var/log/univention/updater.log</filename> file, which can be used for more
		in-depth error analysis.
	  </para>

	  <para>
		The status of the &ucsUCR; variables before the release update is saved in the
		<filename class="directory">/var/univention-backup/update-to-TARGETRELEASEVERSION/</filename>
		directory. This can then be used to check whether and which variables have been changed
		during the update.
	  </para>
	</section>
  </section>

  <section id="software::configrepo">
	<title>Configuration of the repository server for updates and package installations</title>
	<para>
	  Package installations and updates can either be performed from the Univention
	  update server or from a locally maintained repository. A local repository is
	  practical if there are a lot of UCS systems to update as the updates only need
	  to be downloaded once in this case. As repositories can also be updated
	  offline, a local repository also allows the updating of UCS environments
	  without Internet access.
	</para>

	<para>
	  Using the registered settings, APT package sources are automatically generated
	  in the <filename class="directory">/etc/apt/sources.list.d/</filename> directory for release and
	  errata updates as well as addon components. If further repositories are required on a
	  system, these can be entered in the <filename>/etc/apt/sources.list</filename>
	  file.
	</para>

	<para>
	  In the default setting, the Univention repository
	  <uri>updates.software-univention.de</uri> is used for a new installation.
	</para>

	<para>
	  The Univention repository and repository components differentiate between two
	  component parts:
	</para>

	<itemizedlist>
	  <listitem><simpara>
		The UCS standard package scope covered by maintenance can be found in
		the <emphasis>maintained</emphasis> area. In the default setting, only access
		to these packages is activated. Security updates are only provided for
		<emphasis>maintained</emphasis> packages.
	  </simpara></listitem>

	  <listitem><simpara>
		Additional packages can be found under <emphasis>unmaintained</emphasis>,
		e.g., other mail servers than Postfix. These packages are not covered by
		security updates or ulterior maintenance. In the default setting,
		<emphasis>unmaintained</emphasis> is not mounted, but can be integrated by
		setting the &ucsUCRV; <envar>repository/online/unmaintained</envar> to
		<literal>yes</literal>.
	  </simpara></listitem>
	</itemizedlist>

	<para>
	  A local repository can require a lot of disk space - particularly if the
	  unmaintained branch is activated.
	</para>

	<section id="computers:Configuration_via_the_Univention_Management_Console">
	  <title>Configuration via &ucsUMC;</title>
	  <para>
		The <guimenu>Repository server</guimenu> and the use of
		the maintained and unmaintained sections can be specified in the
		UMC module <guimenu>Repository Settings</guimenu>.
	  </para>
	</section>

	<section id="computers:Configuration_via_Univention_Configuration_Registry">
	  <title>Configuration via Univention Configuration Registry</title>
	  <para>
		The repository server to be used can be entered in the &ucsUCRV;
		<envar>repository/online/server</envar> and is preset to
		<uri>updates.software-univention.de</uri> for a new installation.
	  </para>
	  <para>
		The unmaintained repository can be integrated by setting the &ucsUCRV;
		<envar>repository/online/unmaintained</envar> to <literal>yes</literal>.
	  </para>
	</section>

	<section id="computers:Policy-based_configuration_of_the_repository_server">
	  <title>Policy-based configuration of the repository server</title>
	  <para>
		The repository server to be used can also be specified using the
		<guimenu>Repository server</guimenu> policy in the computer management of the
		&ucsUMC;. Only UCS server systems for which a DNS entry has been configured are
		shown in the selection field
		(see <xref linkend="central:policies"/>).
	  </para>
	</section>

	<section id="software::createrepo">
	  <title>Creating and updating a local repository</title>
	  <para>
		Package installations and updates can either be performed from the Univention
		update server or from a locally maintained repository. A local repository is
		practical if there are a lot of UCS systems to update as the updates only need
		to be downloaded once in this case. As repositories can also be updated
		offline, a local repository also allows the updating of UCS environments
		without Internet access.
	  </para>

	  <para>
		There is also the possibility of synchronizing local repositories, which means,
		for example, a main repository is maintained at the company headquarters and
		then synchronized to local repositories at the individual locations.
	  </para>

	  <para>
		To set up a repository, the <command>univention-repository-create</command> command
		must be run as the <systemitem class="username">root</systemitem> user. The initial package inventory is
		imported from an installation DVD. The parameter <option>--iso</option> allows
		importing from an ISO image. UCS is only available as a 64-bit DVD. The
		repository is created by <command>univention-repository-create</command> with the
		architecture of the specified installation medium. If an environment is operated in
		which both 32-bit and 64-bit packages are needed, the following commands must be
		executed on the repository server:

		<programlisting language="sh">
ucr set repository/online/architectures="i386 amd64"
univention-repository-update net
		</programlisting>
	  </para>

	  <para>
		Access to the Univention online repository is cryptographically secured via the
		use of Secure APT employing signatures. This feature is not currently available
		for local repositories and so a message appears when creating a repository
		explaining how Secure APT can be deactivated using the &ucsUCRV;
		<envar>update/secure_apt</envar>. This setting must be set on all UCS systems
		that access the repository.
	  </para>

	  <para>
		The packages in the repository can be updated using the
		<command>univention-repository-update</command> tool. It supports two modes:
	  </para>

	  <itemizedlist>
		<listitem><simpara>
		  <command>univention-repository-update cdrom</command>Here the
		  repository is updated with an update DVD or an ISO image.
		</simpara></listitem>

		<listitem><simpara>
		  <command>univention-repository-update net</command> Here the
		  repository is synchronized with another specified repository server. This is
		  defined in the &ucsUCRV; <envar>repository/mirror/server</envar> and typically
		  points to <uri>updates.software-univention.de</uri>.
		</simpara></listitem>
	  </itemizedlist>

	  <para>
		An overview of the possible options is displayed with the following
		command:
	  </para>

	  <programlisting language="sh">
univention-repository-update -h
	  </programlisting>

	  <para>
		The repository is stored in the
		<filename class="directory">/var/lib/univention-repository/mirror/</filename> directory.
	  </para>

	  <para>
		The local repository can be activated/deactivated using the &ucsUCRV;
		<envar>local/repository</envar>.
	  </para>

	</section>
  </section>

  <section id="computers::softwaremanagement::installsoftware">
	<title>Installation of further software</title>
	<para>
	  The initial selection of the software components of a UCS system is performed
	  within the scope of the installation. The software components are selected
	  relative to the functions, whereby e.g. the <emphasis>Proxy server</emphasis>
	  component is selected, which then procures the actual software packages via a
	  meta package. The administrator does not need to know the actual package names.
	  However, individual packages can also be specifically installed and removed for
	  further tasks.
	  When installing a package, it is sometimes necessary to install additional
	  packages, which are required for the proper functioning of the package. These
	  are called packages dependencies.
	  All software components are loaded from a repository (see <xref
	  linkend="software::configrepo"/>).
	</para>

	<para>
	  Software which is not available in the Debian package format should be
	  installed into the <filename class="directory">/opt/</filename> or <filename class="directory">/usr/local/</filename>
	  directories. These directories are not used for installing UCS packages, thus a
	  clean separation between UCS packages and other software is ensured.
	</para>

	<para>
	  There are several possibilities for installing further packages subsequently on
	  an installed system:
	</para>

	<section id="computers:softwareselection">
	  <title>Installation/uninstallation of UCS components in the Univention App Center</title>

	  <para>
		All software components offered in the Univention Installer can also be installed and
		removed at a later point in time via the Univention App Center. This is done by selecting
		the <guimenu>UCS components</guimenu> package category. Further information on the
		Univention App Center can be found in <xref linkend="software:appcenter"/>.
	  </para>

	  <figure id="appcenter-ucscomponents">
		<title>Selection of UCS components in the App Center</title>
		<graphic scalefit="1" width="100%" fileref="illustrations44/appcenter-ucs-en.png"/>
	  </figure>

	</section>

	<section id="computers:Installation_removal_of_individual_packages_in_the_Univention_Management_Console">
	  <title>Installation/removal of individual packages in &ucsUMC;</title>
	  <para>
		The UMC module <guimenu>Package Management</guimenu> can be used to install and uninstall
		individual software packages.
	  </para>

	  <figure id="software-umcinstall">
		  <title>Installing the package <package>univention-squid</package> in &ucsUMC;</title>
		<graphic scalefit="1" width="100%" fileref="illustrations44/software_install_en1.png"/>
	  </figure>

	  <para>
		A search mask is displayed on the start page in which the user can select the
		package category or a search filter (name or description). The results are displayed in
		a table with the following columns:
	  </para>

	  <itemizedlist>
		<listitem><simpara>Package name</simpara></listitem>
		<listitem><simpara>Package description</simpara></listitem>
		<listitem><simpara>Installation status</simpara></listitem>
	  </itemizedlist>

	  <para>
		Clicking an entry in the result list opens a detailed information page with a
		comprehensive description of the package.
	  </para>

	  <para>
		In addition, one or more buttons will be displayed: <guimenu>Install</guimenu>
		is displayed if the software package is not installed yet;
		<guimenu>Uninstall</guimenu> is displayed if the software package is installed
		and <guimenu>Upgrade</guimenu> is displayed if the software package is
		installed but not updated. <guimenu>Close</guimenu> can be used for returning
		to the previous search request.
	  </para>
	</section>

	<section id="computers:Installation_removal_of_individual_packages_in_the_command_line">
	  <title>Installation/removal of individual packages in the command line</title>
	  <para>
		The following steps must be performed with <systemitem class="username">root</systemitem> rights.
	  </para>

	  <para>
		Individual packages are installed using the command
	  </para>

	  <programlisting language="sh">
univention-install PACKAGENAME
	  </programlisting>

	  <para>
		Packages can be removed with the following command:
	  </para>

		<programlisting language="sh">
		  univention-remove PACKAGENAME
		</programlisting>

	  <para>
		If the name of a package is unknown, the command <command>apt-cache
		search</command> can be used to search for the package. Parts of the name or
		words which appear in the description of the package are listed, e.g.:
	  </para>

	  <programlisting language="sh">
apt-cache search fax
	  </programlisting>
	</section>

	<section id="computers::softwaremanagement::packagelists">
	  <title>Policy-based installation/uninstallation of individual packages via package lists</title>
	  <para>
		Package lists can be used to install and remove software using policies. This
		allows central software deployment for a large number of computer systems.
	  </para>

	  <para>
		Each system role has its own package policy type.
	  </para>

	  <para>
		Package policies are managed in the UMC module <emphasis>Policies</emphasis>
		with the <guimenu>Policy: Packages + system
		role</guimenu>.
	  </para>

	  <table>
		<title>'General' tab</title>
		<tgroup cols="2">
		  <colspec colnum="1" colname="col1" colwidth="1*"/>
		  <colspec colnum="2" colname="col2" colwidth="2*"/>
		  <thead>
			<row>
			  <entry>Attribute</entry>
			  <entry>Description</entry>
			</row>
		  </thead>
		  <tbody>
			<row>
			  <entry>Name</entry>
			  <entry>
				An unambiguous name for this package list, e.g., <emphasis>mail
				server</emphasis>.
			  </entry>
			</row>
			<row>
			  <entry>Package installation list</entry>
			  <entry>
				A list of packages to be installed.
			  </entry>
			</row>
			<row>
			  <entry>Package removal list</entry>
			  <entry>
				A list of packages to be removed.
			  </entry>
			</row>
		  </tbody>
		</tgroup>
	  </table>

	  <para>
		The software packages defined in a package list are
		installed/uninstalled at the time defined in the <guimenu>Maintenance</guimenu>
		policy (for the configuration see <xref
		linkend="computers::softwaremanagement::maintenancepolicy"/>).
	  </para>

	  <para>
		The software assignable in the package policies are also registered in the
		LDAP.
	  </para>
	  <!-- This is documented in Univention Wiki under WIKIREF-24368. -->
	</section>
  </section>

  <section id="computers::softwaremanagement::maintenancepolicy">
	<title>Specification of an update point using the package maintenance policy</title>
	<para>
	  A <guimenu>Maintenance</guimenu> policy (see <xref linkend="central:policies"/>)
	  in the UMC modules for computer and domain management can be used
	  to specify a point at which the following steps should be performed:
	</para>

	<itemizedlist>
	  <listitem><simpara>
		Check for available release updates to be installed (see <xref
		linkend="computers::softwaremanagement::releasepolicy"/>) and, if applicable,
		installation.
	  </simpara></listitem>

	  <listitem><simpara>
		Installation/uninstallation of package lists (see <xref
		linkend="computers::softwaremanagement::packagelists"/>)
	  </simpara></listitem>

	  <listitem><simpara>
		Installation of available errata updates
	  </simpara></listitem>
	</itemizedlist>

	<para>
	  Alternatively, the updates can also be performed when the system is booting or
	  shut down.
	</para>

	<table>
	  <title>'General' tab</title>
	  <tgroup cols="2">
		<colspec colnum="1" colname="col1" colwidth="1*"/>
		<colspec colnum="2" colname="col2" colwidth="2*"/>
		<thead>
		  <row>
			<entry>Attribute</entry>
			<entry>Description</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
			<entry>Perform maintenance after system startup</entry>
			<entry>
			  If this option is activated, the update steps are performed when the computer
			  is started up.
			</entry>
		  </row>
		  <row>
			<entry>Perform maintenance before system shutdown</entry>
			<entry>
			  If this option is activated, the update steps are performed when the computer
			  is shut down.
			</entry>
		  </row>
		  <row>
			<entry>Use Cron settings</entry>
			<entry>
			  If this flag is activated, the fields <emphasis>Month</emphasis>, <emphasis>Day
			  of week</emphasis>, <emphasis>Day</emphasis>, <emphasis>Hour</emphasis> and
			  <emphasis>Minute</emphasis> can be used to specify an exact time when the
			  update steps should be performed.
			</entry>
		  </row>
		  <row>
			<entry>Reboot after maintenance</entry>
			<entry>
			  This option allows you to perform an automatic system restart after release
			  updates either directly or after a specified time period of hours.
			</entry>
		  </row>
		</tbody>
	  </tgroup>
	</table>
  </section>


  <section id="computers::softwaremonitor">
	<title>Central monitoring of software installation statuses with the software monitor</title>
	<para>
	  The software monitor is a database in which information is stored concerning
	  the software packages installed across all UCS systems. This database offers an
	  administrator an overview of which release and package versions are installed
	  in the domain and offers information for the step-by-step updating of a UCS
	  domain and for use in identifying problems.
	</para>

	<para>
	  The software monitor can be installed from the Univention App Center with the application
	  <emphasis>Software installation monitor</emphasis>. Alternatively, the software package
	  <package>univention-pkgdb</package> can be installed. Additional information can be found in
	  <xref linkend="computers::softwaremanagement::installsoftware"/>.
	</para>

	<para>
	  UCS systems update their entries automatically when software is installed,
	  uninstalled or updated. The system on which the software monitor is operated is
	  located by the DNS service record <command>_pkgdb._tcp</command>.
	</para>

	<para>
	  The software monitor's web-based interface integrates in &ucsUMC; and can
	  be accessed via the <guimenu>Software monitor</guimenu> module. The following
	  functions are available:
	</para>

	<itemizedlist>
	  <listitem><simpara>
		<emphasis>Systems</emphasis> allows to search for the version numbers of installed
		systems. It is possible to search for system names, UCS versions and system roles.
	  </simpara></listitem>

	  <listitem><para>
		<emphasis>Packages</emphasis> allows to search in the installation data
		tracked by the package status database. Besides searching for a <emphasis>Package name</emphasis>
		there are various search possibilities available for the installation status of packages:
	  </para></listitem>

	  <listitem><simpara>
		The <emphasis>Selection state</emphasis> influences the action taken
		when updating a package. <literal>Install</literal> is used to select a
		package for installation. If a package is configured to
		<literal>Hold</literal> it will be excluded from further updates. There are
		two possibilities for uninstalling a package: A package removed with
		<literal>DeInstall</literal> keeps locally created configuration data, whilst
		a package removed with <literal>Purge</literal> is
		completely deleted.
	  </simpara></listitem>

	  <listitem><simpara>
		The <emphasis>Installation state</emphasis> describes the status of
		an installed package in relation to upcoming updates. The normal status is
		<literal>Ok</literal>, which leads to a package being updated when a newer
		version exists. If a package is configured to <literal>Hold</literal> it will
		be excluded from the update.
	  </simpara></listitem>

	  <listitem><simpara>
		The <emphasis>Package state</emphasis> describes the status of a
		set-up package. The normal status here is <literal>Installed</literal> for
		installed packages and <literal>ConfigFiles</literal> for removed
		packages. All other statuses appear when the package's installation was
		canceled in different phases.
	  </simpara> </listitem>
	</itemizedlist>

	<figure id="software-monitor">
	  <title>Searching for packages in the software monitor</title>
	  <graphic scalefit="1" width="100%" fileref="illustrations44/software_softwaremonitor_en.png"/>
	</figure>

	<para>
	  If you do not wish UCS systems to store installation processes in the software
	  monitor (e.g., when there is no network connection to the database), this can
	  be arranged by setting the &ucsUCRV; <envar>pkgdb/scan</envar> to
	  <literal>no</literal>.
	</para>

	<para>
	  Should storing be reactivated at a later date, the command
	  <command>univention-pkgdb-scan</command> must be executed to ensure that
	  package versions installed in the meanwhile are also adopted in the database.
	</para>

	<para>
	  The following command can be used to remove a system's program inventory from the database again:
	</para>
	<programlisting language="sh">
univention-pkgdb-scan --remove-system RECHNERNAME
	</programlisting>
  </section>

</chapter>
<!-- vim:set ts=2 sw=2 tw=100 noet ft=docbk:-->
