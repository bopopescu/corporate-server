@%@UCRWARNING=# @%@

@!@
port = configRegistry.get('ldap/server/port', '7389')
ldap_server_name = configRegistry.get('ldap/server/name')
ldap_server_addition = configRegistry.get('ldap/server/addition')
ldaphosts = []
if ldap_server_name:
	ldaphosts.append(ldap_server_name)
if ldap_server_addition:
	ldaphosts.extend(ldap_server_addition.replace('"', '').split())
if ldaphosts:
	urilist = ["ldap://%s:%s" % (host, port) for host in ldaphosts]
	print 'uri %s' % ' '.join(urilist)

if configRegistry.is_true('nssldap/auth', True) and configRegistry.get('ldap/hostdn'):
	print 'rootbinddn %s' % configRegistry['ldap/hostdn']	## required for non-anonymous non-local bind
	print 'binddn %s' % configRegistry['ldap/hostdn']	## required dbus
	import os
	if os.path.isfile("/etc/machine.secret"):
		print 'bindpw %s' % (open('/etc/machine.secret', 'rb').read())
@!@
base @%@ldap/base@%@
ldap_version 3
scope sub
ssl start_tls
@!@
print 'tls_checkpeer %s' % configRegistry.get('nssldap/tls/checkpeer', 'no')

if configRegistry.get('nssldap/bindpolicy'):
	print 'bind_policy %s' % configRegistry.get('nssldap/bindpolicy')
if 'nssldap/idle/timelimit' in configRegistry:
	print 'idle_timelimit %s' % configRegistry['nssldap/idle/timelimit']
if 'nssldap/timelimit' in configRegistry:
	print 'timelimit %s' % configRegistry['nssldap/timelimit']
if configRegistry.is_true('nssldap/nss_initgroups_ignoreusers', True):
	print 'nss_initgroups_ignoreusers %s' % configRegistry.get("nssldap/nss_initgroups_ignoreusers/users", "root")
if configRegistry.is_false('nssldap/nss_srv', False):
	print 'nss_srv off'
@!@
