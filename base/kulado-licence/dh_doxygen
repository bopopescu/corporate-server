#!/bin/bash
#
# Univention License
#  Generaze manual pages from source file using Doxygen
#
# Copyright 2004-2019 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.
#
# Create manual pages from files listed in debian/${package}.doxygen using
# debian/default.doxcfg as Doxygen configuration template.
# Comment (###) from the .doxygen files are appended as overrides.
# Manual pages are directly installed into the debian/${package}/usr/share/man/ hierarchy.
#

create_doc () {
	if [ ! -e "${debdir}/default.doxcfg" ]
	then	
		echo "debian/default.doxcfg not found. Don't create manpages."
		return 0
	fi
	for package in $(dh_listpackages | grep "${targetfilter}")
	do
		if [ ! -e "${debdir}/${package}.doxygen" ]
		then
			echo "File ${package}.doxygen not found. Don't create manpage."
			continue
		fi

		echo "Create manpages for ${package}..."

		#parse the .doxygen for the input of doxygen
		declare -a input
		while read line
		do
			case "$line" in
				\#\#\#*) ;;
				*) input+=("${tardir}/${line}") ;;
			esac
		done <"${debdir}/${package}.doxygen"
		echo "Input: ${input[@]}"
		
		#create the doxcfg file for this package
		cat >"${doxfile}" <<-__DOX__
		@INCLUDE_PATH = ${debdir}
		@INCLUDE = default.doxcfg
		STRIP_FROM_PATH = ${tardir}
		INPUT = ${input[@]}
		OUTPUT_DIRECTORY = ${debdir}/${package}/usr/share
		__DOX__
		sed -ne 's/^###//p' "${debdir}/${package}.doxygen" >>"${doxfile}"
	
		#generate the manpages
		doxygen "${doxfile}"
	done
}

clean_doc () {
	#clean up
	rm -f  "${doxfile}"
}

#main
tardir="${PWD}/debian/tmp"
debdir="${PWD}/debian"
targetfilter="dev"
doxfile="${debdir}/current.doxcfg"

case "$1" in
	create)
		create_doc
	;;

	clean)
		clean_doc
	;;

	*)
		echo "Usage: dh_doxygen [create|clean]" >&2
		exit 2
	;;
esac
